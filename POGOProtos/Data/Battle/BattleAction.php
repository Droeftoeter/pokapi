<?php
/**
 * Generated by Protobuf protoc plugin.
 *
 * File descriptor : POGOProtos.Data.Battle.proto
 */


namespace POGOProtos\Data\Battle;

/**
 * Protobuf message : POGOProtos.Data.Battle.BattleAction
 */
class BattleAction extends \Protobuf\AbstractMessage
{

    /**
     * @var \Protobuf\UnknownFieldSet
     */
    protected $unknownFieldSet = null;

    /**
     * @var \Protobuf\Extension\ExtensionFieldMap
     */
    protected $extensions = null;

    /**
     * Type optional enum = 1
     *
     * @var \POGOProtos\Data\Battle\BattleActionType
     */
    protected $Type = null;

    /**
     * action_start_ms optional int64 = 2
     *
     * @var int
     */
    protected $action_start_ms = null;

    /**
     * duration_ms optional int32 = 3
     *
     * @var int
     */
    protected $duration_ms = null;

    /**
     * energy_delta optional int32 = 5
     *
     * @var int
     */
    protected $energy_delta = null;

    /**
     * attacker_index optional int32 = 6
     *
     * @var int
     */
    protected $attacker_index = null;

    /**
     * target_index optional int32 = 7
     *
     * @var int
     */
    protected $target_index = null;

    /**
     * active_pokemon_id optional fixed64 = 8
     *
     * @var int
     */
    protected $active_pokemon_id = null;

    /**
     * player_joined optional message = 9
     *
     * @var \POGOProtos\Data\Battle\BattleParticipant
     */
    protected $player_joined = null;

    /**
     * battle_results optional message = 10
     *
     * @var \POGOProtos\Data\Battle\BattleResults
     */
    protected $battle_results = null;

    /**
     * damage_windows_start_timestamp_mss optional int64 = 11
     *
     * @var int
     */
    protected $damage_windows_start_timestamp_mss = null;

    /**
     * damage_windows_end_timestamp_mss optional int64 = 12
     *
     * @var int
     */
    protected $damage_windows_end_timestamp_mss = null;

    /**
     * player_left optional message = 13
     *
     * @var \POGOProtos\Data\Battle\BattleParticipant
     */
    protected $player_left = null;

    /**
     * target_pokemon_id optional fixed64 = 14
     *
     * @var int
     */
    protected $target_pokemon_id = null;

    /**
     * Check if 'Type' has a value
     *
     * @return bool
     */
    public function hasType()
    {
        return $this->Type !== null;
    }

    /**
     * Get 'Type' value
     *
     * @return \POGOProtos\Data\Battle\BattleActionType
     */
    public function getType()
    {
        return $this->Type;
    }

    /**
     * Set 'Type' value
     *
     * @param \POGOProtos\Data\Battle\BattleActionType $value
     */
    public function setType(\POGOProtos\Data\Battle\BattleActionType $value = null)
    {
        $this->Type = $value;
    }

    /**
     * Check if 'action_start_ms' has a value
     *
     * @return bool
     */
    public function hasActionStartMs()
    {
        return $this->action_start_ms !== null;
    }

    /**
     * Get 'action_start_ms' value
     *
     * @return int
     */
    public function getActionStartMs()
    {
        return $this->action_start_ms;
    }

    /**
     * Set 'action_start_ms' value
     *
     * @param int $value
     */
    public function setActionStartMs($value = null)
    {
        $this->action_start_ms = $value;
    }

    /**
     * Check if 'duration_ms' has a value
     *
     * @return bool
     */
    public function hasDurationMs()
    {
        return $this->duration_ms !== null;
    }

    /**
     * Get 'duration_ms' value
     *
     * @return int
     */
    public function getDurationMs()
    {
        return $this->duration_ms;
    }

    /**
     * Set 'duration_ms' value
     *
     * @param int $value
     */
    public function setDurationMs($value = null)
    {
        $this->duration_ms = $value;
    }

    /**
     * Check if 'energy_delta' has a value
     *
     * @return bool
     */
    public function hasEnergyDelta()
    {
        return $this->energy_delta !== null;
    }

    /**
     * Get 'energy_delta' value
     *
     * @return int
     */
    public function getEnergyDelta()
    {
        return $this->energy_delta;
    }

    /**
     * Set 'energy_delta' value
     *
     * @param int $value
     */
    public function setEnergyDelta($value = null)
    {
        $this->energy_delta = $value;
    }

    /**
     * Check if 'attacker_index' has a value
     *
     * @return bool
     */
    public function hasAttackerIndex()
    {
        return $this->attacker_index !== null;
    }

    /**
     * Get 'attacker_index' value
     *
     * @return int
     */
    public function getAttackerIndex()
    {
        return $this->attacker_index;
    }

    /**
     * Set 'attacker_index' value
     *
     * @param int $value
     */
    public function setAttackerIndex($value = null)
    {
        $this->attacker_index = $value;
    }

    /**
     * Check if 'target_index' has a value
     *
     * @return bool
     */
    public function hasTargetIndex()
    {
        return $this->target_index !== null;
    }

    /**
     * Get 'target_index' value
     *
     * @return int
     */
    public function getTargetIndex()
    {
        return $this->target_index;
    }

    /**
     * Set 'target_index' value
     *
     * @param int $value
     */
    public function setTargetIndex($value = null)
    {
        $this->target_index = $value;
    }

    /**
     * Check if 'active_pokemon_id' has a value
     *
     * @return bool
     */
    public function hasActivePokemonId()
    {
        return $this->active_pokemon_id !== null;
    }

    /**
     * Get 'active_pokemon_id' value
     *
     * @return int
     */
    public function getActivePokemonId()
    {
        return $this->active_pokemon_id;
    }

    /**
     * Set 'active_pokemon_id' value
     *
     * @param int $value
     */
    public function setActivePokemonId($value = null)
    {
        $this->active_pokemon_id = $value;
    }

    /**
     * Check if 'player_joined' has a value
     *
     * @return bool
     */
    public function hasPlayerJoined()
    {
        return $this->player_joined !== null;
    }

    /**
     * Get 'player_joined' value
     *
     * @return \POGOProtos\Data\Battle\BattleParticipant
     */
    public function getPlayerJoined()
    {
        return $this->player_joined;
    }

    /**
     * Set 'player_joined' value
     *
     * @param \POGOProtos\Data\Battle\BattleParticipant $value
     */
    public function setPlayerJoined(\POGOProtos\Data\Battle\BattleParticipant $value = null)
    {
        $this->player_joined = $value;
    }

    /**
     * Check if 'battle_results' has a value
     *
     * @return bool
     */
    public function hasBattleResults()
    {
        return $this->battle_results !== null;
    }

    /**
     * Get 'battle_results' value
     *
     * @return \POGOProtos\Data\Battle\BattleResults
     */
    public function getBattleResults()
    {
        return $this->battle_results;
    }

    /**
     * Set 'battle_results' value
     *
     * @param \POGOProtos\Data\Battle\BattleResults $value
     */
    public function setBattleResults(\POGOProtos\Data\Battle\BattleResults $value = null)
    {
        $this->battle_results = $value;
    }

    /**
     * Check if 'damage_windows_start_timestamp_mss' has a value
     *
     * @return bool
     */
    public function hasDamageWindowsStartTimestampMss()
    {
        return $this->damage_windows_start_timestamp_mss !== null;
    }

    /**
     * Get 'damage_windows_start_timestamp_mss' value
     *
     * @return int
     */
    public function getDamageWindowsStartTimestampMss()
    {
        return $this->damage_windows_start_timestamp_mss;
    }

    /**
     * Set 'damage_windows_start_timestamp_mss' value
     *
     * @param int $value
     */
    public function setDamageWindowsStartTimestampMss($value = null)
    {
        $this->damage_windows_start_timestamp_mss = $value;
    }

    /**
     * Check if 'damage_windows_end_timestamp_mss' has a value
     *
     * @return bool
     */
    public function hasDamageWindowsEndTimestampMss()
    {
        return $this->damage_windows_end_timestamp_mss !== null;
    }

    /**
     * Get 'damage_windows_end_timestamp_mss' value
     *
     * @return int
     */
    public function getDamageWindowsEndTimestampMss()
    {
        return $this->damage_windows_end_timestamp_mss;
    }

    /**
     * Set 'damage_windows_end_timestamp_mss' value
     *
     * @param int $value
     */
    public function setDamageWindowsEndTimestampMss($value = null)
    {
        $this->damage_windows_end_timestamp_mss = $value;
    }

    /**
     * Check if 'player_left' has a value
     *
     * @return bool
     */
    public function hasPlayerLeft()
    {
        return $this->player_left !== null;
    }

    /**
     * Get 'player_left' value
     *
     * @return \POGOProtos\Data\Battle\BattleParticipant
     */
    public function getPlayerLeft()
    {
        return $this->player_left;
    }

    /**
     * Set 'player_left' value
     *
     * @param \POGOProtos\Data\Battle\BattleParticipant $value
     */
    public function setPlayerLeft(\POGOProtos\Data\Battle\BattleParticipant $value = null)
    {
        $this->player_left = $value;
    }

    /**
     * Check if 'target_pokemon_id' has a value
     *
     * @return bool
     */
    public function hasTargetPokemonId()
    {
        return $this->target_pokemon_id !== null;
    }

    /**
     * Get 'target_pokemon_id' value
     *
     * @return int
     */
    public function getTargetPokemonId()
    {
        return $this->target_pokemon_id;
    }

    /**
     * Set 'target_pokemon_id' value
     *
     * @param int $value
     */
    public function setTargetPokemonId($value = null)
    {
        $this->target_pokemon_id = $value;
    }

    /**
     * {@inheritdoc}
     */
    public function extensions()
    {
        if ( $this->extensions !== null) {
            return $this->extensions;
        }

        return $this->extensions = new \Protobuf\Extension\ExtensionFieldMap(__CLASS__);
    }

    /**
     * {@inheritdoc}
     */
    public function unknownFieldSet()
    {
        return $this->unknownFieldSet;
    }

    /**
     * {@inheritdoc}
     */
    public static function fromStream($stream, \Protobuf\Configuration $configuration = null)
    {
        return new self($stream, $configuration);
    }

    /**
     * {@inheritdoc}
     */
    public static function fromArray(array $values)
    {
        $message = new self();
        $values  = array_merge([
            'Type' => null,
            'action_start_ms' => null,
            'duration_ms' => null,
            'energy_delta' => null,
            'attacker_index' => null,
            'target_index' => null,
            'active_pokemon_id' => null,
            'player_joined' => null,
            'battle_results' => null,
            'damage_windows_start_timestamp_mss' => null,
            'damage_windows_end_timestamp_mss' => null,
            'player_left' => null,
            'target_pokemon_id' => null
        ], $values);

        $message->setType($values['Type']);
        $message->setActionStartMs($values['action_start_ms']);
        $message->setDurationMs($values['duration_ms']);
        $message->setEnergyDelta($values['energy_delta']);
        $message->setAttackerIndex($values['attacker_index']);
        $message->setTargetIndex($values['target_index']);
        $message->setActivePokemonId($values['active_pokemon_id']);
        $message->setPlayerJoined($values['player_joined']);
        $message->setBattleResults($values['battle_results']);
        $message->setDamageWindowsStartTimestampMss($values['damage_windows_start_timestamp_mss']);
        $message->setDamageWindowsEndTimestampMss($values['damage_windows_end_timestamp_mss']);
        $message->setPlayerLeft($values['player_left']);
        $message->setTargetPokemonId($values['target_pokemon_id']);

        return $message;
    }

    /**
     * {@inheritdoc}
     */
    public static function descriptor()
    {
        return \google\protobuf\DescriptorProto::fromArray([
            'name'      => 'BattleAction',
            'field'     => [
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 1,
                    'name' => 'Type',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_ENUM(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL(),
                    'type_name' => '.POGOProtos.Data.Battle.BattleActionType'
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 2,
                    'name' => 'action_start_ms',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT64(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 3,
                    'name' => 'duration_ms',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 5,
                    'name' => 'energy_delta',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 6,
                    'name' => 'attacker_index',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 7,
                    'name' => 'target_index',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 8,
                    'name' => 'active_pokemon_id',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_FIXED64(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 9,
                    'name' => 'player_joined',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_MESSAGE(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL(),
                    'type_name' => '.POGOProtos.Data.Battle.BattleParticipant'
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 10,
                    'name' => 'battle_results',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_MESSAGE(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL(),
                    'type_name' => '.POGOProtos.Data.Battle.BattleResults'
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 11,
                    'name' => 'damage_windows_start_timestamp_mss',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT64(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 12,
                    'name' => 'damage_windows_end_timestamp_mss',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT64(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 13,
                    'name' => 'player_left',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_MESSAGE(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL(),
                    'type_name' => '.POGOProtos.Data.Battle.BattleParticipant'
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 14,
                    'name' => 'target_pokemon_id',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_FIXED64(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
            ],
        ]);
    }

    /**
     * {@inheritdoc}
     */
    public function toStream(\Protobuf\Configuration $configuration = null)
    {
        $config  = $configuration ?: \Protobuf\Configuration::getInstance();
        $context = $config->createWriteContext();
        $stream  = $context->getStream();

        $this->writeTo($context);
        $stream->seek(0);

        return $stream;
    }

    /**
     * {@inheritdoc}
     */
    public function writeTo(\Protobuf\WriteContext $context)
    {
        $stream      = $context->getStream();
        $writer      = $context->getWriter();
        $sizeContext = $context->getComputeSizeContext();

        if ($this->Type !== null) {
            $writer->writeVarint($stream, 8);
            $writer->writeVarint($stream, $this->Type->value());
        }

        if ($this->action_start_ms !== null) {
            $writer->writeVarint($stream, 16);
            $writer->writeVarint($stream, $this->action_start_ms);
        }

        if ($this->duration_ms !== null) {
            $writer->writeVarint($stream, 24);
            $writer->writeVarint($stream, $this->duration_ms);
        }

        if ($this->energy_delta !== null) {
            $writer->writeVarint($stream, 40);
            $writer->writeVarint($stream, $this->energy_delta);
        }

        if ($this->attacker_index !== null) {
            $writer->writeVarint($stream, 48);
            $writer->writeVarint($stream, $this->attacker_index);
        }

        if ($this->target_index !== null) {
            $writer->writeVarint($stream, 56);
            $writer->writeVarint($stream, $this->target_index);
        }

        if ($this->active_pokemon_id !== null) {
            $writer->writeVarint($stream, 65);
            $writer->writeFixed64($stream, $this->active_pokemon_id);
        }

        if ($this->player_joined !== null) {
            $writer->writeVarint($stream, 74);
            $writer->writeVarint($stream, $this->player_joined->serializedSize($sizeContext));
            $this->player_joined->writeTo($context);
        }

        if ($this->battle_results !== null) {
            $writer->writeVarint($stream, 82);
            $writer->writeVarint($stream, $this->battle_results->serializedSize($sizeContext));
            $this->battle_results->writeTo($context);
        }

        if ($this->damage_windows_start_timestamp_mss !== null) {
            $writer->writeVarint($stream, 88);
            $writer->writeVarint($stream, $this->damage_windows_start_timestamp_mss);
        }

        if ($this->damage_windows_end_timestamp_mss !== null) {
            $writer->writeVarint($stream, 96);
            $writer->writeVarint($stream, $this->damage_windows_end_timestamp_mss);
        }

        if ($this->player_left !== null) {
            $writer->writeVarint($stream, 106);
            $writer->writeVarint($stream, $this->player_left->serializedSize($sizeContext));
            $this->player_left->writeTo($context);
        }

        if ($this->target_pokemon_id !== null) {
            $writer->writeVarint($stream, 113);
            $writer->writeFixed64($stream, $this->target_pokemon_id);
        }

        if ($this->extensions !== null) {
            $this->extensions->writeTo($context);
        }

        return $stream;
    }

    /**
     * {@inheritdoc}
     */
    public function readFrom(\Protobuf\ReadContext $context)
    {
        $reader = $context->getReader();
        $length = $context->getLength();
        $stream = $context->getStream();

        $limit = ($length !== null)
            ? ($stream->tell() + $length)
            : null;

        while ($limit === null || $stream->tell() < $limit) {

            if ($stream->eof()) {
                break;
            }

            $key  = $reader->readVarint($stream);
            $wire = \Protobuf\WireFormat::getTagWireType($key);
            $tag  = \Protobuf\WireFormat::getTagFieldNumber($key);

            if ($stream->eof()) {
                break;
            }

            if ($tag === 1) {
                \Protobuf\WireFormat::assertWireType($wire, 14);

                $this->Type = \POGOProtos\Data\Battle\BattleActionType::valueOf($reader->readVarint($stream));

                continue;
            }

            if ($tag === 2) {
                \Protobuf\WireFormat::assertWireType($wire, 3);

                $this->action_start_ms = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 3) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->duration_ms = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 5) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->energy_delta = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 6) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->attacker_index = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 7) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->target_index = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 8) {
                \Protobuf\WireFormat::assertWireType($wire, 6);

                $this->active_pokemon_id = $reader->readFixed64($stream);

                continue;
            }

            if ($tag === 9) {
                \Protobuf\WireFormat::assertWireType($wire, 11);

                $innerSize    = $reader->readVarint($stream);
                $innerMessage = new \POGOProtos\Data\Battle\BattleParticipant();

                $this->player_joined = $innerMessage;

                $context->setLength($innerSize);
                $innerMessage->readFrom($context);
                $context->setLength($length);

                continue;
            }

            if ($tag === 10) {
                \Protobuf\WireFormat::assertWireType($wire, 11);

                $innerSize    = $reader->readVarint($stream);
                $innerMessage = new \POGOProtos\Data\Battle\BattleResults();

                $this->battle_results = $innerMessage;

                $context->setLength($innerSize);
                $innerMessage->readFrom($context);
                $context->setLength($length);

                continue;
            }

            if ($tag === 11) {
                \Protobuf\WireFormat::assertWireType($wire, 3);

                $this->damage_windows_start_timestamp_mss = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 12) {
                \Protobuf\WireFormat::assertWireType($wire, 3);

                $this->damage_windows_end_timestamp_mss = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 13) {
                \Protobuf\WireFormat::assertWireType($wire, 11);

                $innerSize    = $reader->readVarint($stream);
                $innerMessage = new \POGOProtos\Data\Battle\BattleParticipant();

                $this->player_left = $innerMessage;

                $context->setLength($innerSize);
                $innerMessage->readFrom($context);
                $context->setLength($length);

                continue;
            }

            if ($tag === 14) {
                \Protobuf\WireFormat::assertWireType($wire, 6);

                $this->target_pokemon_id = $reader->readFixed64($stream);

                continue;
            }

            $extensions = $context->getExtensionRegistry();
            $extension  = $extensions ? $extensions->findByNumber(__CLASS__, $tag) : null;

            if ($extension !== null) {
                $this->extensions()->add($extension, $extension->readFrom($context, $wire));

                continue;
            }

            if ($this->unknownFieldSet === null) {
                $this->unknownFieldSet = new \Protobuf\UnknownFieldSet();
            }

            $data    = $reader->readUnknown($stream, $wire);
            $unknown = new \Protobuf\Unknown($tag, $wire, $data);

            $this->unknownFieldSet->add($unknown);

        }
    }

    /**
     * {@inheritdoc}
     */
    public function serializedSize(\Protobuf\ComputeSizeContext $context)
    {
        $calculator = $context->getSizeCalculator();
        $size       = 0;

        if ($this->Type !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->Type->value());
        }

        if ($this->action_start_ms !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->action_start_ms);
        }

        if ($this->duration_ms !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->duration_ms);
        }

        if ($this->energy_delta !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->energy_delta);
        }

        if ($this->attacker_index !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->attacker_index);
        }

        if ($this->target_index !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->target_index);
        }

        if ($this->active_pokemon_id !== null) {
            $size += 1;
            $size += 8;
        }

        if ($this->player_joined !== null) {
            $innerSize = $this->player_joined->serializedSize($context);

            $size += 1;
            $size += $innerSize;
            $size += $calculator->computeVarintSize($innerSize);
        }

        if ($this->battle_results !== null) {
            $innerSize = $this->battle_results->serializedSize($context);

            $size += 1;
            $size += $innerSize;
            $size += $calculator->computeVarintSize($innerSize);
        }

        if ($this->damage_windows_start_timestamp_mss !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->damage_windows_start_timestamp_mss);
        }

        if ($this->damage_windows_end_timestamp_mss !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->damage_windows_end_timestamp_mss);
        }

        if ($this->player_left !== null) {
            $innerSize = $this->player_left->serializedSize($context);

            $size += 1;
            $size += $innerSize;
            $size += $calculator->computeVarintSize($innerSize);
        }

        if ($this->target_pokemon_id !== null) {
            $size += 1;
            $size += 8;
        }

        if ($this->extensions !== null) {
            $size += $this->extensions->serializedSize($context);
        }

        return $size;
    }

    /**
     * {@inheritdoc}
     */
    public function clear()
    {
        $this->Type = null;
        $this->action_start_ms = null;
        $this->duration_ms = null;
        $this->energy_delta = null;
        $this->attacker_index = null;
        $this->target_index = null;
        $this->active_pokemon_id = null;
        $this->player_joined = null;
        $this->battle_results = null;
        $this->damage_windows_start_timestamp_mss = null;
        $this->damage_windows_end_timestamp_mss = null;
        $this->player_left = null;
        $this->target_pokemon_id = null;
    }

    /**
     * {@inheritdoc}
     */
    public function merge(\Protobuf\Message $message)
    {
        if ( ! $message instanceof \POGOProtos\Data\Battle\BattleAction) {
            throw new \InvalidArgumentException(sprintf('Argument 1 passed to %s must be a %s, %s given', __METHOD__, __CLASS__, get_class($message)));
        }

        $this->Type = ($message->Type !== null) ? $message->Type : $this->Type;
        $this->action_start_ms = ($message->action_start_ms !== null) ? $message->action_start_ms : $this->action_start_ms;
        $this->duration_ms = ($message->duration_ms !== null) ? $message->duration_ms : $this->duration_ms;
        $this->energy_delta = ($message->energy_delta !== null) ? $message->energy_delta : $this->energy_delta;
        $this->attacker_index = ($message->attacker_index !== null) ? $message->attacker_index : $this->attacker_index;
        $this->target_index = ($message->target_index !== null) ? $message->target_index : $this->target_index;
        $this->active_pokemon_id = ($message->active_pokemon_id !== null) ? $message->active_pokemon_id : $this->active_pokemon_id;
        $this->player_joined = ($message->player_joined !== null) ? $message->player_joined : $this->player_joined;
        $this->battle_results = ($message->battle_results !== null) ? $message->battle_results : $this->battle_results;
        $this->damage_windows_start_timestamp_mss = ($message->damage_windows_start_timestamp_mss !== null) ? $message->damage_windows_start_timestamp_mss : $this->damage_windows_start_timestamp_mss;
        $this->damage_windows_end_timestamp_mss = ($message->damage_windows_end_timestamp_mss !== null) ? $message->damage_windows_end_timestamp_mss : $this->damage_windows_end_timestamp_mss;
        $this->player_left = ($message->player_left !== null) ? $message->player_left : $this->player_left;
        $this->target_pokemon_id = ($message->target_pokemon_id !== null) ? $message->target_pokemon_id : $this->target_pokemon_id;
    }


}

