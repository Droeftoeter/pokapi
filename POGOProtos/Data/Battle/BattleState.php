<?php
/**
 * Generated by Protobuf protoc plugin.
 *
 * File descriptor : POGOProtos.Data.Battle.proto
 */


namespace POGOProtos\Data\Battle;

/**
 * Protobuf enum : POGOProtos.Data.Battle.BattleState
 */
class BattleState extends \Protobuf\Enum
{

    /**
     * STATE_UNSET = 0
     */
    const STATE_UNSET_VALUE = 0;

    /**
     * ACTIVE = 1
     */
    const ACTIVE_VALUE = 1;

    /**
     * VICTORY = 2
     */
    const VICTORY_VALUE = 2;

    /**
     * DEFEATED = 3
     */
    const DEFEATED_VALUE = 3;

    /**
     * TIMED_OUT = 4
     */
    const TIMED_OUT_VALUE = 4;

    /**
     * @var \POGOProtos\Data\Battle\BattleState
     */
    protected static $STATE_UNSET = null;

    /**
     * @var \POGOProtos\Data\Battle\BattleState
     */
    protected static $ACTIVE = null;

    /**
     * @var \POGOProtos\Data\Battle\BattleState
     */
    protected static $VICTORY = null;

    /**
     * @var \POGOProtos\Data\Battle\BattleState
     */
    protected static $DEFEATED = null;

    /**
     * @var \POGOProtos\Data\Battle\BattleState
     */
    protected static $TIMED_OUT = null;

    /**
     * @return \POGOProtos\Data\Battle\BattleState
     */
    public static function STATE_UNSET()
    {
        if (self::$STATE_UNSET !== null) {
            return self::$STATE_UNSET;
        }

        return self::$STATE_UNSET = new self('STATE_UNSET', self::STATE_UNSET_VALUE);
    }

    /**
     * @return \POGOProtos\Data\Battle\BattleState
     */
    public static function ACTIVE()
    {
        if (self::$ACTIVE !== null) {
            return self::$ACTIVE;
        }

        return self::$ACTIVE = new self('ACTIVE', self::ACTIVE_VALUE);
    }

    /**
     * @return \POGOProtos\Data\Battle\BattleState
     */
    public static function VICTORY()
    {
        if (self::$VICTORY !== null) {
            return self::$VICTORY;
        }

        return self::$VICTORY = new self('VICTORY', self::VICTORY_VALUE);
    }

    /**
     * @return \POGOProtos\Data\Battle\BattleState
     */
    public static function DEFEATED()
    {
        if (self::$DEFEATED !== null) {
            return self::$DEFEATED;
        }

        return self::$DEFEATED = new self('DEFEATED', self::DEFEATED_VALUE);
    }

    /**
     * @return \POGOProtos\Data\Battle\BattleState
     */
    public static function TIMED_OUT()
    {
        if (self::$TIMED_OUT !== null) {
            return self::$TIMED_OUT;
        }

        return self::$TIMED_OUT = new self('TIMED_OUT', self::TIMED_OUT_VALUE);
    }

    /**
     * @param int $value
     * @return \POGOProtos\Data\Battle\BattleState
     */
    public static function valueOf($value)
    {
        switch ($value) {
            case 0: return self::STATE_UNSET();
            case 1: return self::ACTIVE();
            case 2: return self::VICTORY();
            case 3: return self::DEFEATED();
            case 4: return self::TIMED_OUT();
            default: return null;
        }
    }


}

