<?php
/**
 * Generated by Protobuf protoc plugin.
 *
 * File descriptor : POGOProtos.Data.proto
 */


namespace POGOProtos\Data;

/**
 * Protobuf message : POGOProtos.Data.PokemonData
 */
class PokemonData extends \Protobuf\AbstractMessage
{

    /**
     * @var \Protobuf\UnknownFieldSet
     */
    protected $unknownFieldSet = null;

    /**
     * @var \Protobuf\Extension\ExtensionFieldMap
     */
    protected $extensions = null;

    /**
     * id optional fixed64 = 1
     *
     * @var int
     */
    protected $id = null;

    /**
     * pokemon_id optional enum = 2
     *
     * @var \POGOProtos\Enums\PokemonId
     */
    protected $pokemon_id = null;

    /**
     * cp optional int32 = 3
     *
     * @var int
     */
    protected $cp = null;

    /**
     * stamina optional int32 = 4
     *
     * @var int
     */
    protected $stamina = null;

    /**
     * stamina_max optional int32 = 5
     *
     * @var int
     */
    protected $stamina_max = null;

    /**
     * move_1 optional enum = 6
     *
     * @var \POGOProtos\Enums\PokemonMove
     */
    protected $move_1 = null;

    /**
     * move_2 optional enum = 7
     *
     * @var \POGOProtos\Enums\PokemonMove
     */
    protected $move_2 = null;

    /**
     * deployed_fort_id optional string = 8
     *
     * @var string
     */
    protected $deployed_fort_id = null;

    /**
     * owner_name optional string = 9
     *
     * @var string
     */
    protected $owner_name = null;

    /**
     * is_egg optional bool = 10
     *
     * @var bool
     */
    protected $is_egg = null;

    /**
     * egg_km_walked_target optional double = 11
     *
     * @var float
     */
    protected $egg_km_walked_target = null;

    /**
     * egg_km_walked_start optional double = 12
     *
     * @var float
     */
    protected $egg_km_walked_start = null;

    /**
     * origin optional int32 = 14
     *
     * @var int
     */
    protected $origin = null;

    /**
     * height_m optional float = 15
     *
     * @var float
     */
    protected $height_m = null;

    /**
     * weight_kg optional float = 16
     *
     * @var float
     */
    protected $weight_kg = null;

    /**
     * individual_attack optional int32 = 17
     *
     * @var int
     */
    protected $individual_attack = null;

    /**
     * individual_defense optional int32 = 18
     *
     * @var int
     */
    protected $individual_defense = null;

    /**
     * individual_stamina optional int32 = 19
     *
     * @var int
     */
    protected $individual_stamina = null;

    /**
     * cp_multiplier optional float = 20
     *
     * @var float
     */
    protected $cp_multiplier = null;

    /**
     * pokeball optional enum = 21
     *
     * @var \POGOProtos\Inventory\Item\ItemId
     */
    protected $pokeball = null;

    /**
     * captured_cell_id optional uint64 = 22
     *
     * @var int
     */
    protected $captured_cell_id = null;

    /**
     * battles_attacked optional int32 = 23
     *
     * @var int
     */
    protected $battles_attacked = null;

    /**
     * battles_defended optional int32 = 24
     *
     * @var int
     */
    protected $battles_defended = null;

    /**
     * egg_incubator_id optional string = 25
     *
     * @var string
     */
    protected $egg_incubator_id = null;

    /**
     * creation_time_ms optional uint64 = 26
     *
     * @var int
     */
    protected $creation_time_ms = null;

    /**
     * num_upgrades optional int32 = 27
     *
     * @var int
     */
    protected $num_upgrades = null;

    /**
     * additional_cp_multiplier optional float = 28
     *
     * @var float
     */
    protected $additional_cp_multiplier = null;

    /**
     * favorite optional int32 = 29
     *
     * @var int
     */
    protected $favorite = null;

    /**
     * nickname optional string = 30
     *
     * @var string
     */
    protected $nickname = null;

    /**
     * from_fort optional int32 = 31
     *
     * @var int
     */
    protected $from_fort = null;

    /**
     * Check if 'id' has a value
     *
     * @return bool
     */
    public function hasId()
    {
        return $this->id !== null;
    }

    /**
     * Get 'id' value
     *
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set 'id' value
     *
     * @param int $value
     */
    public function setId($value = null)
    {
        $this->id = $value;
    }

    /**
     * Check if 'pokemon_id' has a value
     *
     * @return bool
     */
    public function hasPokemonId()
    {
        return $this->pokemon_id !== null;
    }

    /**
     * Get 'pokemon_id' value
     *
     * @return \POGOProtos\Enums\PokemonId
     */
    public function getPokemonId()
    {
        return $this->pokemon_id;
    }

    /**
     * Set 'pokemon_id' value
     *
     * @param \POGOProtos\Enums\PokemonId $value
     */
    public function setPokemonId(\POGOProtos\Enums\PokemonId $value = null)
    {
        $this->pokemon_id = $value;
    }

    /**
     * Check if 'cp' has a value
     *
     * @return bool
     */
    public function hasCp()
    {
        return $this->cp !== null;
    }

    /**
     * Get 'cp' value
     *
     * @return int
     */
    public function getCp()
    {
        return $this->cp;
    }

    /**
     * Set 'cp' value
     *
     * @param int $value
     */
    public function setCp($value = null)
    {
        $this->cp = $value;
    }

    /**
     * Check if 'stamina' has a value
     *
     * @return bool
     */
    public function hasStamina()
    {
        return $this->stamina !== null;
    }

    /**
     * Get 'stamina' value
     *
     * @return int
     */
    public function getStamina()
    {
        return $this->stamina;
    }

    /**
     * Set 'stamina' value
     *
     * @param int $value
     */
    public function setStamina($value = null)
    {
        $this->stamina = $value;
    }

    /**
     * Check if 'stamina_max' has a value
     *
     * @return bool
     */
    public function hasStaminaMax()
    {
        return $this->stamina_max !== null;
    }

    /**
     * Get 'stamina_max' value
     *
     * @return int
     */
    public function getStaminaMax()
    {
        return $this->stamina_max;
    }

    /**
     * Set 'stamina_max' value
     *
     * @param int $value
     */
    public function setStaminaMax($value = null)
    {
        $this->stamina_max = $value;
    }

    /**
     * Check if 'move_1' has a value
     *
     * @return bool
     */
    public function hasMove1()
    {
        return $this->move_1 !== null;
    }

    /**
     * Get 'move_1' value
     *
     * @return \POGOProtos\Enums\PokemonMove
     */
    public function getMove1()
    {
        return $this->move_1;
    }

    /**
     * Set 'move_1' value
     *
     * @param \POGOProtos\Enums\PokemonMove $value
     */
    public function setMove1(\POGOProtos\Enums\PokemonMove $value = null)
    {
        $this->move_1 = $value;
    }

    /**
     * Check if 'move_2' has a value
     *
     * @return bool
     */
    public function hasMove2()
    {
        return $this->move_2 !== null;
    }

    /**
     * Get 'move_2' value
     *
     * @return \POGOProtos\Enums\PokemonMove
     */
    public function getMove2()
    {
        return $this->move_2;
    }

    /**
     * Set 'move_2' value
     *
     * @param \POGOProtos\Enums\PokemonMove $value
     */
    public function setMove2(\POGOProtos\Enums\PokemonMove $value = null)
    {
        $this->move_2 = $value;
    }

    /**
     * Check if 'deployed_fort_id' has a value
     *
     * @return bool
     */
    public function hasDeployedFortId()
    {
        return $this->deployed_fort_id !== null;
    }

    /**
     * Get 'deployed_fort_id' value
     *
     * @return string
     */
    public function getDeployedFortId()
    {
        return $this->deployed_fort_id;
    }

    /**
     * Set 'deployed_fort_id' value
     *
     * @param string $value
     */
    public function setDeployedFortId($value = null)
    {
        $this->deployed_fort_id = $value;
    }

    /**
     * Check if 'owner_name' has a value
     *
     * @return bool
     */
    public function hasOwnerName()
    {
        return $this->owner_name !== null;
    }

    /**
     * Get 'owner_name' value
     *
     * @return string
     */
    public function getOwnerName()
    {
        return $this->owner_name;
    }

    /**
     * Set 'owner_name' value
     *
     * @param string $value
     */
    public function setOwnerName($value = null)
    {
        $this->owner_name = $value;
    }

    /**
     * Check if 'is_egg' has a value
     *
     * @return bool
     */
    public function hasIsEgg()
    {
        return $this->is_egg !== null;
    }

    /**
     * Get 'is_egg' value
     *
     * @return bool
     */
    public function getIsEgg()
    {
        return $this->is_egg;
    }

    /**
     * Set 'is_egg' value
     *
     * @param bool $value
     */
    public function setIsEgg($value = null)
    {
        $this->is_egg = $value;
    }

    /**
     * Check if 'egg_km_walked_target' has a value
     *
     * @return bool
     */
    public function hasEggKmWalkedTarget()
    {
        return $this->egg_km_walked_target !== null;
    }

    /**
     * Get 'egg_km_walked_target' value
     *
     * @return float
     */
    public function getEggKmWalkedTarget()
    {
        return $this->egg_km_walked_target;
    }

    /**
     * Set 'egg_km_walked_target' value
     *
     * @param float $value
     */
    public function setEggKmWalkedTarget($value = null)
    {
        $this->egg_km_walked_target = $value;
    }

    /**
     * Check if 'egg_km_walked_start' has a value
     *
     * @return bool
     */
    public function hasEggKmWalkedStart()
    {
        return $this->egg_km_walked_start !== null;
    }

    /**
     * Get 'egg_km_walked_start' value
     *
     * @return float
     */
    public function getEggKmWalkedStart()
    {
        return $this->egg_km_walked_start;
    }

    /**
     * Set 'egg_km_walked_start' value
     *
     * @param float $value
     */
    public function setEggKmWalkedStart($value = null)
    {
        $this->egg_km_walked_start = $value;
    }

    /**
     * Check if 'origin' has a value
     *
     * @return bool
     */
    public function hasOrigin()
    {
        return $this->origin !== null;
    }

    /**
     * Get 'origin' value
     *
     * @return int
     */
    public function getOrigin()
    {
        return $this->origin;
    }

    /**
     * Set 'origin' value
     *
     * @param int $value
     */
    public function setOrigin($value = null)
    {
        $this->origin = $value;
    }

    /**
     * Check if 'height_m' has a value
     *
     * @return bool
     */
    public function hasHeightM()
    {
        return $this->height_m !== null;
    }

    /**
     * Get 'height_m' value
     *
     * @return float
     */
    public function getHeightM()
    {
        return $this->height_m;
    }

    /**
     * Set 'height_m' value
     *
     * @param float $value
     */
    public function setHeightM($value = null)
    {
        $this->height_m = $value;
    }

    /**
     * Check if 'weight_kg' has a value
     *
     * @return bool
     */
    public function hasWeightKg()
    {
        return $this->weight_kg !== null;
    }

    /**
     * Get 'weight_kg' value
     *
     * @return float
     */
    public function getWeightKg()
    {
        return $this->weight_kg;
    }

    /**
     * Set 'weight_kg' value
     *
     * @param float $value
     */
    public function setWeightKg($value = null)
    {
        $this->weight_kg = $value;
    }

    /**
     * Check if 'individual_attack' has a value
     *
     * @return bool
     */
    public function hasIndividualAttack()
    {
        return $this->individual_attack !== null;
    }

    /**
     * Get 'individual_attack' value
     *
     * @return int
     */
    public function getIndividualAttack()
    {
        return $this->individual_attack;
    }

    /**
     * Set 'individual_attack' value
     *
     * @param int $value
     */
    public function setIndividualAttack($value = null)
    {
        $this->individual_attack = $value;
    }

    /**
     * Check if 'individual_defense' has a value
     *
     * @return bool
     */
    public function hasIndividualDefense()
    {
        return $this->individual_defense !== null;
    }

    /**
     * Get 'individual_defense' value
     *
     * @return int
     */
    public function getIndividualDefense()
    {
        return $this->individual_defense;
    }

    /**
     * Set 'individual_defense' value
     *
     * @param int $value
     */
    public function setIndividualDefense($value = null)
    {
        $this->individual_defense = $value;
    }

    /**
     * Check if 'individual_stamina' has a value
     *
     * @return bool
     */
    public function hasIndividualStamina()
    {
        return $this->individual_stamina !== null;
    }

    /**
     * Get 'individual_stamina' value
     *
     * @return int
     */
    public function getIndividualStamina()
    {
        return $this->individual_stamina;
    }

    /**
     * Set 'individual_stamina' value
     *
     * @param int $value
     */
    public function setIndividualStamina($value = null)
    {
        $this->individual_stamina = $value;
    }

    /**
     * Check if 'cp_multiplier' has a value
     *
     * @return bool
     */
    public function hasCpMultiplier()
    {
        return $this->cp_multiplier !== null;
    }

    /**
     * Get 'cp_multiplier' value
     *
     * @return float
     */
    public function getCpMultiplier()
    {
        return $this->cp_multiplier;
    }

    /**
     * Set 'cp_multiplier' value
     *
     * @param float $value
     */
    public function setCpMultiplier($value = null)
    {
        $this->cp_multiplier = $value;
    }

    /**
     * Check if 'pokeball' has a value
     *
     * @return bool
     */
    public function hasPokeball()
    {
        return $this->pokeball !== null;
    }

    /**
     * Get 'pokeball' value
     *
     * @return \POGOProtos\Inventory\Item\ItemId
     */
    public function getPokeball()
    {
        return $this->pokeball;
    }

    /**
     * Set 'pokeball' value
     *
     * @param \POGOProtos\Inventory\Item\ItemId $value
     */
    public function setPokeball(\POGOProtos\Inventory\Item\ItemId $value = null)
    {
        $this->pokeball = $value;
    }

    /**
     * Check if 'captured_cell_id' has a value
     *
     * @return bool
     */
    public function hasCapturedCellId()
    {
        return $this->captured_cell_id !== null;
    }

    /**
     * Get 'captured_cell_id' value
     *
     * @return int
     */
    public function getCapturedCellId()
    {
        return $this->captured_cell_id;
    }

    /**
     * Set 'captured_cell_id' value
     *
     * @param int $value
     */
    public function setCapturedCellId($value = null)
    {
        $this->captured_cell_id = $value;
    }

    /**
     * Check if 'battles_attacked' has a value
     *
     * @return bool
     */
    public function hasBattlesAttacked()
    {
        return $this->battles_attacked !== null;
    }

    /**
     * Get 'battles_attacked' value
     *
     * @return int
     */
    public function getBattlesAttacked()
    {
        return $this->battles_attacked;
    }

    /**
     * Set 'battles_attacked' value
     *
     * @param int $value
     */
    public function setBattlesAttacked($value = null)
    {
        $this->battles_attacked = $value;
    }

    /**
     * Check if 'battles_defended' has a value
     *
     * @return bool
     */
    public function hasBattlesDefended()
    {
        return $this->battles_defended !== null;
    }

    /**
     * Get 'battles_defended' value
     *
     * @return int
     */
    public function getBattlesDefended()
    {
        return $this->battles_defended;
    }

    /**
     * Set 'battles_defended' value
     *
     * @param int $value
     */
    public function setBattlesDefended($value = null)
    {
        $this->battles_defended = $value;
    }

    /**
     * Check if 'egg_incubator_id' has a value
     *
     * @return bool
     */
    public function hasEggIncubatorId()
    {
        return $this->egg_incubator_id !== null;
    }

    /**
     * Get 'egg_incubator_id' value
     *
     * @return string
     */
    public function getEggIncubatorId()
    {
        return $this->egg_incubator_id;
    }

    /**
     * Set 'egg_incubator_id' value
     *
     * @param string $value
     */
    public function setEggIncubatorId($value = null)
    {
        $this->egg_incubator_id = $value;
    }

    /**
     * Check if 'creation_time_ms' has a value
     *
     * @return bool
     */
    public function hasCreationTimeMs()
    {
        return $this->creation_time_ms !== null;
    }

    /**
     * Get 'creation_time_ms' value
     *
     * @return int
     */
    public function getCreationTimeMs()
    {
        return $this->creation_time_ms;
    }

    /**
     * Set 'creation_time_ms' value
     *
     * @param int $value
     */
    public function setCreationTimeMs($value = null)
    {
        $this->creation_time_ms = $value;
    }

    /**
     * Check if 'num_upgrades' has a value
     *
     * @return bool
     */
    public function hasNumUpgrades()
    {
        return $this->num_upgrades !== null;
    }

    /**
     * Get 'num_upgrades' value
     *
     * @return int
     */
    public function getNumUpgrades()
    {
        return $this->num_upgrades;
    }

    /**
     * Set 'num_upgrades' value
     *
     * @param int $value
     */
    public function setNumUpgrades($value = null)
    {
        $this->num_upgrades = $value;
    }

    /**
     * Check if 'additional_cp_multiplier' has a value
     *
     * @return bool
     */
    public function hasAdditionalCpMultiplier()
    {
        return $this->additional_cp_multiplier !== null;
    }

    /**
     * Get 'additional_cp_multiplier' value
     *
     * @return float
     */
    public function getAdditionalCpMultiplier()
    {
        return $this->additional_cp_multiplier;
    }

    /**
     * Set 'additional_cp_multiplier' value
     *
     * @param float $value
     */
    public function setAdditionalCpMultiplier($value = null)
    {
        $this->additional_cp_multiplier = $value;
    }

    /**
     * Check if 'favorite' has a value
     *
     * @return bool
     */
    public function hasFavorite()
    {
        return $this->favorite !== null;
    }

    /**
     * Get 'favorite' value
     *
     * @return int
     */
    public function getFavorite()
    {
        return $this->favorite;
    }

    /**
     * Set 'favorite' value
     *
     * @param int $value
     */
    public function setFavorite($value = null)
    {
        $this->favorite = $value;
    }

    /**
     * Check if 'nickname' has a value
     *
     * @return bool
     */
    public function hasNickname()
    {
        return $this->nickname !== null;
    }

    /**
     * Get 'nickname' value
     *
     * @return string
     */
    public function getNickname()
    {
        return $this->nickname;
    }

    /**
     * Set 'nickname' value
     *
     * @param string $value
     */
    public function setNickname($value = null)
    {
        $this->nickname = $value;
    }

    /**
     * Check if 'from_fort' has a value
     *
     * @return bool
     */
    public function hasFromFort()
    {
        return $this->from_fort !== null;
    }

    /**
     * Get 'from_fort' value
     *
     * @return int
     */
    public function getFromFort()
    {
        return $this->from_fort;
    }

    /**
     * Set 'from_fort' value
     *
     * @param int $value
     */
    public function setFromFort($value = null)
    {
        $this->from_fort = $value;
    }

    /**
     * {@inheritdoc}
     */
    public function extensions()
    {
        if ( $this->extensions !== null) {
            return $this->extensions;
        }

        return $this->extensions = new \Protobuf\Extension\ExtensionFieldMap(__CLASS__);
    }

    /**
     * {@inheritdoc}
     */
    public function unknownFieldSet()
    {
        return $this->unknownFieldSet;
    }

    /**
     * {@inheritdoc}
     */
    public static function fromStream($stream, \Protobuf\Configuration $configuration = null)
    {
        return new self($stream, $configuration);
    }

    /**
     * {@inheritdoc}
     */
    public static function fromArray(array $values)
    {
        $message = new self();
        $values  = array_merge([
            'id' => null,
            'pokemon_id' => null,
            'cp' => null,
            'stamina' => null,
            'stamina_max' => null,
            'move_1' => null,
            'move_2' => null,
            'deployed_fort_id' => null,
            'owner_name' => null,
            'is_egg' => null,
            'egg_km_walked_target' => null,
            'egg_km_walked_start' => null,
            'origin' => null,
            'height_m' => null,
            'weight_kg' => null,
            'individual_attack' => null,
            'individual_defense' => null,
            'individual_stamina' => null,
            'cp_multiplier' => null,
            'pokeball' => null,
            'captured_cell_id' => null,
            'battles_attacked' => null,
            'battles_defended' => null,
            'egg_incubator_id' => null,
            'creation_time_ms' => null,
            'num_upgrades' => null,
            'additional_cp_multiplier' => null,
            'favorite' => null,
            'nickname' => null,
            'from_fort' => null
        ], $values);

        $message->setId($values['id']);
        $message->setPokemonId($values['pokemon_id']);
        $message->setCp($values['cp']);
        $message->setStamina($values['stamina']);
        $message->setStaminaMax($values['stamina_max']);
        $message->setMove1($values['move_1']);
        $message->setMove2($values['move_2']);
        $message->setDeployedFortId($values['deployed_fort_id']);
        $message->setOwnerName($values['owner_name']);
        $message->setIsEgg($values['is_egg']);
        $message->setEggKmWalkedTarget($values['egg_km_walked_target']);
        $message->setEggKmWalkedStart($values['egg_km_walked_start']);
        $message->setOrigin($values['origin']);
        $message->setHeightM($values['height_m']);
        $message->setWeightKg($values['weight_kg']);
        $message->setIndividualAttack($values['individual_attack']);
        $message->setIndividualDefense($values['individual_defense']);
        $message->setIndividualStamina($values['individual_stamina']);
        $message->setCpMultiplier($values['cp_multiplier']);
        $message->setPokeball($values['pokeball']);
        $message->setCapturedCellId($values['captured_cell_id']);
        $message->setBattlesAttacked($values['battles_attacked']);
        $message->setBattlesDefended($values['battles_defended']);
        $message->setEggIncubatorId($values['egg_incubator_id']);
        $message->setCreationTimeMs($values['creation_time_ms']);
        $message->setNumUpgrades($values['num_upgrades']);
        $message->setAdditionalCpMultiplier($values['additional_cp_multiplier']);
        $message->setFavorite($values['favorite']);
        $message->setNickname($values['nickname']);
        $message->setFromFort($values['from_fort']);

        return $message;
    }

    /**
     * {@inheritdoc}
     */
    public static function descriptor()
    {
        return \google\protobuf\DescriptorProto::fromArray([
            'name'      => 'PokemonData',
            'field'     => [
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 1,
                    'name' => 'id',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_FIXED64(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 2,
                    'name' => 'pokemon_id',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_ENUM(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL(),
                    'type_name' => '.POGOProtos.Enums.PokemonId'
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 3,
                    'name' => 'cp',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 4,
                    'name' => 'stamina',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 5,
                    'name' => 'stamina_max',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 6,
                    'name' => 'move_1',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_ENUM(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL(),
                    'type_name' => '.POGOProtos.Enums.PokemonMove'
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 7,
                    'name' => 'move_2',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_ENUM(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL(),
                    'type_name' => '.POGOProtos.Enums.PokemonMove'
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 8,
                    'name' => 'deployed_fort_id',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 9,
                    'name' => 'owner_name',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 10,
                    'name' => 'is_egg',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_BOOL(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 11,
                    'name' => 'egg_km_walked_target',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_DOUBLE(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 12,
                    'name' => 'egg_km_walked_start',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_DOUBLE(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 14,
                    'name' => 'origin',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 15,
                    'name' => 'height_m',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_FLOAT(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 16,
                    'name' => 'weight_kg',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_FLOAT(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 17,
                    'name' => 'individual_attack',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 18,
                    'name' => 'individual_defense',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 19,
                    'name' => 'individual_stamina',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 20,
                    'name' => 'cp_multiplier',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_FLOAT(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 21,
                    'name' => 'pokeball',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_ENUM(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL(),
                    'type_name' => '.POGOProtos.Inventory.Item.ItemId'
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 22,
                    'name' => 'captured_cell_id',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_UINT64(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 23,
                    'name' => 'battles_attacked',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 24,
                    'name' => 'battles_defended',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 25,
                    'name' => 'egg_incubator_id',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 26,
                    'name' => 'creation_time_ms',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_UINT64(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 27,
                    'name' => 'num_upgrades',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 28,
                    'name' => 'additional_cp_multiplier',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_FLOAT(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 29,
                    'name' => 'favorite',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 30,
                    'name' => 'nickname',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 31,
                    'name' => 'from_fort',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
            ],
        ]);
    }

    /**
     * {@inheritdoc}
     */
    public function toStream(\Protobuf\Configuration $configuration = null)
    {
        $config  = $configuration ?: \Protobuf\Configuration::getInstance();
        $context = $config->createWriteContext();
        $stream  = $context->getStream();

        $this->writeTo($context);
        $stream->seek(0);

        return $stream;
    }

    /**
     * {@inheritdoc}
     */
    public function writeTo(\Protobuf\WriteContext $context)
    {
        $stream      = $context->getStream();
        $writer      = $context->getWriter();
        $sizeContext = $context->getComputeSizeContext();

        if ($this->id !== null) {
            $writer->writeVarint($stream, 9);
            $writer->writeFixed64($stream, $this->id);
        }

        if ($this->pokemon_id !== null) {
            $writer->writeVarint($stream, 16);
            $writer->writeVarint($stream, $this->pokemon_id->value());
        }

        if ($this->cp !== null) {
            $writer->writeVarint($stream, 24);
            $writer->writeVarint($stream, $this->cp);
        }

        if ($this->stamina !== null) {
            $writer->writeVarint($stream, 32);
            $writer->writeVarint($stream, $this->stamina);
        }

        if ($this->stamina_max !== null) {
            $writer->writeVarint($stream, 40);
            $writer->writeVarint($stream, $this->stamina_max);
        }

        if ($this->move_1 !== null) {
            $writer->writeVarint($stream, 48);
            $writer->writeVarint($stream, $this->move_1->value());
        }

        if ($this->move_2 !== null) {
            $writer->writeVarint($stream, 56);
            $writer->writeVarint($stream, $this->move_2->value());
        }

        if ($this->deployed_fort_id !== null) {
            $writer->writeVarint($stream, 66);
            $writer->writeString($stream, $this->deployed_fort_id);
        }

        if ($this->owner_name !== null) {
            $writer->writeVarint($stream, 74);
            $writer->writeString($stream, $this->owner_name);
        }

        if ($this->is_egg !== null) {
            $writer->writeVarint($stream, 80);
            $writer->writeBool($stream, $this->is_egg);
        }

        if ($this->egg_km_walked_target !== null) {
            $writer->writeVarint($stream, 89);
            $writer->writeDouble($stream, $this->egg_km_walked_target);
        }

        if ($this->egg_km_walked_start !== null) {
            $writer->writeVarint($stream, 97);
            $writer->writeDouble($stream, $this->egg_km_walked_start);
        }

        if ($this->origin !== null) {
            $writer->writeVarint($stream, 112);
            $writer->writeVarint($stream, $this->origin);
        }

        if ($this->height_m !== null) {
            $writer->writeVarint($stream, 125);
            $writer->writeFloat($stream, $this->height_m);
        }

        if ($this->weight_kg !== null) {
            $writer->writeVarint($stream, 133);
            $writer->writeFloat($stream, $this->weight_kg);
        }

        if ($this->individual_attack !== null) {
            $writer->writeVarint($stream, 136);
            $writer->writeVarint($stream, $this->individual_attack);
        }

        if ($this->individual_defense !== null) {
            $writer->writeVarint($stream, 144);
            $writer->writeVarint($stream, $this->individual_defense);
        }

        if ($this->individual_stamina !== null) {
            $writer->writeVarint($stream, 152);
            $writer->writeVarint($stream, $this->individual_stamina);
        }

        if ($this->cp_multiplier !== null) {
            $writer->writeVarint($stream, 165);
            $writer->writeFloat($stream, $this->cp_multiplier);
        }

        if ($this->pokeball !== null) {
            $writer->writeVarint($stream, 168);
            $writer->writeVarint($stream, $this->pokeball->value());
        }

        if ($this->captured_cell_id !== null) {
            $writer->writeVarint($stream, 176);
            $writer->writeVarint($stream, $this->captured_cell_id);
        }

        if ($this->battles_attacked !== null) {
            $writer->writeVarint($stream, 184);
            $writer->writeVarint($stream, $this->battles_attacked);
        }

        if ($this->battles_defended !== null) {
            $writer->writeVarint($stream, 192);
            $writer->writeVarint($stream, $this->battles_defended);
        }

        if ($this->egg_incubator_id !== null) {
            $writer->writeVarint($stream, 202);
            $writer->writeString($stream, $this->egg_incubator_id);
        }

        if ($this->creation_time_ms !== null) {
            $writer->writeVarint($stream, 208);
            $writer->writeVarint($stream, $this->creation_time_ms);
        }

        if ($this->num_upgrades !== null) {
            $writer->writeVarint($stream, 216);
            $writer->writeVarint($stream, $this->num_upgrades);
        }

        if ($this->additional_cp_multiplier !== null) {
            $writer->writeVarint($stream, 229);
            $writer->writeFloat($stream, $this->additional_cp_multiplier);
        }

        if ($this->favorite !== null) {
            $writer->writeVarint($stream, 232);
            $writer->writeVarint($stream, $this->favorite);
        }

        if ($this->nickname !== null) {
            $writer->writeVarint($stream, 242);
            $writer->writeString($stream, $this->nickname);
        }

        if ($this->from_fort !== null) {
            $writer->writeVarint($stream, 248);
            $writer->writeVarint($stream, $this->from_fort);
        }

        if ($this->extensions !== null) {
            $this->extensions->writeTo($context);
        }

        return $stream;
    }

    /**
     * {@inheritdoc}
     */
    public function readFrom(\Protobuf\ReadContext $context)
    {
        $reader = $context->getReader();
        $length = $context->getLength();
        $stream = $context->getStream();

        $limit = ($length !== null)
            ? ($stream->tell() + $length)
            : null;

        while ($limit === null || $stream->tell() < $limit) {

            if ($stream->eof()) {
                break;
            }

            $key  = $reader->readVarint($stream);
            $wire = \Protobuf\WireFormat::getTagWireType($key);
            $tag  = \Protobuf\WireFormat::getTagFieldNumber($key);

            if ($stream->eof()) {
                break;
            }

            if ($tag === 1) {
                \Protobuf\WireFormat::assertWireType($wire, 6);

                $this->id = $reader->readFixed64($stream);

                continue;
            }

            if ($tag === 2) {
                \Protobuf\WireFormat::assertWireType($wire, 14);

                $this->pokemon_id = \POGOProtos\Enums\PokemonId::valueOf($reader->readVarint($stream));

                continue;
            }

            if ($tag === 3) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->cp = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 4) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->stamina = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 5) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->stamina_max = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 6) {
                \Protobuf\WireFormat::assertWireType($wire, 14);

                $this->move_1 = \POGOProtos\Enums\PokemonMove::valueOf($reader->readVarint($stream));

                continue;
            }

            if ($tag === 7) {
                \Protobuf\WireFormat::assertWireType($wire, 14);

                $this->move_2 = \POGOProtos\Enums\PokemonMove::valueOf($reader->readVarint($stream));

                continue;
            }

            if ($tag === 8) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->deployed_fort_id = $reader->readString($stream);

                continue;
            }

            if ($tag === 9) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->owner_name = $reader->readString($stream);

                continue;
            }

            if ($tag === 10) {
                \Protobuf\WireFormat::assertWireType($wire, 8);

                $this->is_egg = $reader->readBool($stream);

                continue;
            }

            if ($tag === 11) {
                \Protobuf\WireFormat::assertWireType($wire, 1);

                $this->egg_km_walked_target = $reader->readDouble($stream);

                continue;
            }

            if ($tag === 12) {
                \Protobuf\WireFormat::assertWireType($wire, 1);

                $this->egg_km_walked_start = $reader->readDouble($stream);

                continue;
            }

            if ($tag === 14) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->origin = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 15) {
                \Protobuf\WireFormat::assertWireType($wire, 2);

                $this->height_m = $reader->readFloat($stream);

                continue;
            }

            if ($tag === 16) {
                \Protobuf\WireFormat::assertWireType($wire, 2);

                $this->weight_kg = $reader->readFloat($stream);

                continue;
            }

            if ($tag === 17) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->individual_attack = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 18) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->individual_defense = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 19) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->individual_stamina = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 20) {
                \Protobuf\WireFormat::assertWireType($wire, 2);

                $this->cp_multiplier = $reader->readFloat($stream);

                continue;
            }

            if ($tag === 21) {
                \Protobuf\WireFormat::assertWireType($wire, 14);

                $this->pokeball = \POGOProtos\Inventory\Item\ItemId::valueOf($reader->readVarint($stream));

                continue;
            }

            if ($tag === 22) {
                \Protobuf\WireFormat::assertWireType($wire, 4);

                $this->captured_cell_id = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 23) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->battles_attacked = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 24) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->battles_defended = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 25) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->egg_incubator_id = $reader->readString($stream);

                continue;
            }

            if ($tag === 26) {
                \Protobuf\WireFormat::assertWireType($wire, 4);

                $this->creation_time_ms = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 27) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->num_upgrades = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 28) {
                \Protobuf\WireFormat::assertWireType($wire, 2);

                $this->additional_cp_multiplier = $reader->readFloat($stream);

                continue;
            }

            if ($tag === 29) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->favorite = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 30) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->nickname = $reader->readString($stream);

                continue;
            }

            if ($tag === 31) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->from_fort = $reader->readVarint($stream);

                continue;
            }

            $extensions = $context->getExtensionRegistry();
            $extension  = $extensions ? $extensions->findByNumber(__CLASS__, $tag) : null;

            if ($extension !== null) {
                $this->extensions()->add($extension, $extension->readFrom($context, $wire));

                continue;
            }

            if ($this->unknownFieldSet === null) {
                $this->unknownFieldSet = new \Protobuf\UnknownFieldSet();
            }

            $data    = $reader->readUnknown($stream, $wire);
            $unknown = new \Protobuf\Unknown($tag, $wire, $data);

            $this->unknownFieldSet->add($unknown);

        }
    }

    /**
     * {@inheritdoc}
     */
    public function serializedSize(\Protobuf\ComputeSizeContext $context)
    {
        $calculator = $context->getSizeCalculator();
        $size       = 0;

        if ($this->id !== null) {
            $size += 1;
            $size += 8;
        }

        if ($this->pokemon_id !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->pokemon_id->value());
        }

        if ($this->cp !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->cp);
        }

        if ($this->stamina !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->stamina);
        }

        if ($this->stamina_max !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->stamina_max);
        }

        if ($this->move_1 !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->move_1->value());
        }

        if ($this->move_2 !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->move_2->value());
        }

        if ($this->deployed_fort_id !== null) {
            $size += 1;
            $size += $calculator->computeStringSize($this->deployed_fort_id);
        }

        if ($this->owner_name !== null) {
            $size += 1;
            $size += $calculator->computeStringSize($this->owner_name);
        }

        if ($this->is_egg !== null) {
            $size += 1;
            $size += 1;
        }

        if ($this->egg_km_walked_target !== null) {
            $size += 1;
            $size += 8;
        }

        if ($this->egg_km_walked_start !== null) {
            $size += 1;
            $size += 8;
        }

        if ($this->origin !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->origin);
        }

        if ($this->height_m !== null) {
            $size += 1;
            $size += 4;
        }

        if ($this->weight_kg !== null) {
            $size += 2;
            $size += 4;
        }

        if ($this->individual_attack !== null) {
            $size += 2;
            $size += $calculator->computeVarintSize($this->individual_attack);
        }

        if ($this->individual_defense !== null) {
            $size += 2;
            $size += $calculator->computeVarintSize($this->individual_defense);
        }

        if ($this->individual_stamina !== null) {
            $size += 2;
            $size += $calculator->computeVarintSize($this->individual_stamina);
        }

        if ($this->cp_multiplier !== null) {
            $size += 2;
            $size += 4;
        }

        if ($this->pokeball !== null) {
            $size += 2;
            $size += $calculator->computeVarintSize($this->pokeball->value());
        }

        if ($this->captured_cell_id !== null) {
            $size += 2;
            $size += $calculator->computeVarintSize($this->captured_cell_id);
        }

        if ($this->battles_attacked !== null) {
            $size += 2;
            $size += $calculator->computeVarintSize($this->battles_attacked);
        }

        if ($this->battles_defended !== null) {
            $size += 2;
            $size += $calculator->computeVarintSize($this->battles_defended);
        }

        if ($this->egg_incubator_id !== null) {
            $size += 2;
            $size += $calculator->computeStringSize($this->egg_incubator_id);
        }

        if ($this->creation_time_ms !== null) {
            $size += 2;
            $size += $calculator->computeVarintSize($this->creation_time_ms);
        }

        if ($this->num_upgrades !== null) {
            $size += 2;
            $size += $calculator->computeVarintSize($this->num_upgrades);
        }

        if ($this->additional_cp_multiplier !== null) {
            $size += 2;
            $size += 4;
        }

        if ($this->favorite !== null) {
            $size += 2;
            $size += $calculator->computeVarintSize($this->favorite);
        }

        if ($this->nickname !== null) {
            $size += 2;
            $size += $calculator->computeStringSize($this->nickname);
        }

        if ($this->from_fort !== null) {
            $size += 2;
            $size += $calculator->computeVarintSize($this->from_fort);
        }

        if ($this->extensions !== null) {
            $size += $this->extensions->serializedSize($context);
        }

        return $size;
    }

    /**
     * {@inheritdoc}
     */
    public function clear()
    {
        $this->id = null;
        $this->pokemon_id = null;
        $this->cp = null;
        $this->stamina = null;
        $this->stamina_max = null;
        $this->move_1 = null;
        $this->move_2 = null;
        $this->deployed_fort_id = null;
        $this->owner_name = null;
        $this->is_egg = null;
        $this->egg_km_walked_target = null;
        $this->egg_km_walked_start = null;
        $this->origin = null;
        $this->height_m = null;
        $this->weight_kg = null;
        $this->individual_attack = null;
        $this->individual_defense = null;
        $this->individual_stamina = null;
        $this->cp_multiplier = null;
        $this->pokeball = null;
        $this->captured_cell_id = null;
        $this->battles_attacked = null;
        $this->battles_defended = null;
        $this->egg_incubator_id = null;
        $this->creation_time_ms = null;
        $this->num_upgrades = null;
        $this->additional_cp_multiplier = null;
        $this->favorite = null;
        $this->nickname = null;
        $this->from_fort = null;
    }

    /**
     * {@inheritdoc}
     */
    public function merge(\Protobuf\Message $message)
    {
        if ( ! $message instanceof \POGOProtos\Data\PokemonData) {
            throw new \InvalidArgumentException(sprintf('Argument 1 passed to %s must be a %s, %s given', __METHOD__, __CLASS__, get_class($message)));
        }

        $this->id = ($message->id !== null) ? $message->id : $this->id;
        $this->pokemon_id = ($message->pokemon_id !== null) ? $message->pokemon_id : $this->pokemon_id;
        $this->cp = ($message->cp !== null) ? $message->cp : $this->cp;
        $this->stamina = ($message->stamina !== null) ? $message->stamina : $this->stamina;
        $this->stamina_max = ($message->stamina_max !== null) ? $message->stamina_max : $this->stamina_max;
        $this->move_1 = ($message->move_1 !== null) ? $message->move_1 : $this->move_1;
        $this->move_2 = ($message->move_2 !== null) ? $message->move_2 : $this->move_2;
        $this->deployed_fort_id = ($message->deployed_fort_id !== null) ? $message->deployed_fort_id : $this->deployed_fort_id;
        $this->owner_name = ($message->owner_name !== null) ? $message->owner_name : $this->owner_name;
        $this->is_egg = ($message->is_egg !== null) ? $message->is_egg : $this->is_egg;
        $this->egg_km_walked_target = ($message->egg_km_walked_target !== null) ? $message->egg_km_walked_target : $this->egg_km_walked_target;
        $this->egg_km_walked_start = ($message->egg_km_walked_start !== null) ? $message->egg_km_walked_start : $this->egg_km_walked_start;
        $this->origin = ($message->origin !== null) ? $message->origin : $this->origin;
        $this->height_m = ($message->height_m !== null) ? $message->height_m : $this->height_m;
        $this->weight_kg = ($message->weight_kg !== null) ? $message->weight_kg : $this->weight_kg;
        $this->individual_attack = ($message->individual_attack !== null) ? $message->individual_attack : $this->individual_attack;
        $this->individual_defense = ($message->individual_defense !== null) ? $message->individual_defense : $this->individual_defense;
        $this->individual_stamina = ($message->individual_stamina !== null) ? $message->individual_stamina : $this->individual_stamina;
        $this->cp_multiplier = ($message->cp_multiplier !== null) ? $message->cp_multiplier : $this->cp_multiplier;
        $this->pokeball = ($message->pokeball !== null) ? $message->pokeball : $this->pokeball;
        $this->captured_cell_id = ($message->captured_cell_id !== null) ? $message->captured_cell_id : $this->captured_cell_id;
        $this->battles_attacked = ($message->battles_attacked !== null) ? $message->battles_attacked : $this->battles_attacked;
        $this->battles_defended = ($message->battles_defended !== null) ? $message->battles_defended : $this->battles_defended;
        $this->egg_incubator_id = ($message->egg_incubator_id !== null) ? $message->egg_incubator_id : $this->egg_incubator_id;
        $this->creation_time_ms = ($message->creation_time_ms !== null) ? $message->creation_time_ms : $this->creation_time_ms;
        $this->num_upgrades = ($message->num_upgrades !== null) ? $message->num_upgrades : $this->num_upgrades;
        $this->additional_cp_multiplier = ($message->additional_cp_multiplier !== null) ? $message->additional_cp_multiplier : $this->additional_cp_multiplier;
        $this->favorite = ($message->favorite !== null) ? $message->favorite : $this->favorite;
        $this->nickname = ($message->nickname !== null) ? $message->nickname : $this->nickname;
        $this->from_fort = ($message->from_fort !== null) ? $message->from_fort : $this->from_fort;
    }


}

