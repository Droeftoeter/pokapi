<?php
/**
 * Generated by Protobuf protoc plugin.
 *
 * File descriptor : POGOProtos.Networking.Envelopes.proto
 */


namespace POGOProtos\Networking\Envelopes;

/**
 * Protobuf message : POGOProtos.Networking.Envelopes.RequestEnvelope
 */
class RequestEnvelope extends \Protobuf\AbstractMessage
{

    /**
     * @var \Protobuf\UnknownFieldSet
     */
    protected $unknownFieldSet = null;

    /**
     * @var \Protobuf\Extension\ExtensionFieldMap
     */
    protected $extensions = null;

    /**
     * status_code optional int32 = 1
     *
     * @var int
     */
    protected $status_code = null;

    /**
     * request_id optional uint64 = 3
     *
     * @var int
     */
    protected $request_id = null;

    /**
     * requests repeated message = 4
     *
     * @var \Protobuf\Collection<\POGOProtos\Networking\Requests\Request>
     */
    protected $requests = null;

    /**
     * unknown6 repeated message = 6
     *
     * @var \Protobuf\Collection<\POGOProtos\Networking\Envelopes\Unknown6>
     */
    protected $unknown6 = null;

    /**
     * latitude optional double = 7
     *
     * @var float
     */
    protected $latitude = null;

    /**
     * longitude optional double = 8
     *
     * @var float
     */
    protected $longitude = null;

    /**
     * altitude optional double = 9
     *
     * @var float
     */
    protected $altitude = null;

    /**
     * auth_info optional message = 10
     *
     * @var \POGOProtos\Networking\Envelopes\RequestEnvelope\AuthInfo
     */
    protected $auth_info = null;

    /**
     * auth_ticket optional message = 11
     *
     * @var \POGOProtos\Networking\Envelopes\AuthTicket
     */
    protected $auth_ticket = null;

    /**
     * unknown12 optional int64 = 12
     *
     * @var int
     */
    protected $unknown12 = null;

    /**
     * Check if 'status_code' has a value
     *
     * @return bool
     */
    public function hasStatusCode()
    {
        return $this->status_code !== null;
    }

    /**
     * Get 'status_code' value
     *
     * @return int
     */
    public function getStatusCode()
    {
        return $this->status_code;
    }

    /**
     * Set 'status_code' value
     *
     * @param int $value
     */
    public function setStatusCode($value = null)
    {
        $this->status_code = $value;
    }

    /**
     * Check if 'request_id' has a value
     *
     * @return bool
     */
    public function hasRequestId()
    {
        return $this->request_id !== null;
    }

    /**
     * Get 'request_id' value
     *
     * @return int
     */
    public function getRequestId()
    {
        return $this->request_id;
    }

    /**
     * Set 'request_id' value
     *
     * @param int $value
     */
    public function setRequestId($value = null)
    {
        $this->request_id = $value;
    }

    /**
     * Check if 'requests' has a value
     *
     * @return bool
     */
    public function hasRequestsList()
    {
        return $this->requests !== null;
    }

    /**
     * Get 'requests' value
     *
     * @return \Protobuf\Collection<\POGOProtos\Networking\Requests\Request>
     */
    public function getRequestsList()
    {
        return $this->requests;
    }

    /**
     * Set 'requests' value
     *
     * @param \Protobuf\Collection<\POGOProtos\Networking\Requests\Request> $value
     */
    public function setRequestsList(\Protobuf\Collection $value = null)
    {
        $this->requests = $value;
    }

    /**
     * Add a new element to 'requests'
     *
     * @param \POGOProtos\Networking\Requests\Request $value
     */
    public function addRequests(\POGOProtos\Networking\Requests\Request $value)
    {
        if ($this->requests === null) {
            $this->requests = new \Protobuf\MessageCollection();
        }

        $this->requests->add($value);
    }

    /**
     * Check if 'unknown6' has a value
     *
     * @return bool
     */
    public function hasUnknown6List()
    {
        return $this->unknown6 !== null;
    }

    /**
     * Get 'unknown6' value
     *
     * @return \Protobuf\Collection<\POGOProtos\Networking\Envelopes\Unknown6>
     */
    public function getUnknown6List()
    {
        return $this->unknown6;
    }

    /**
     * Set 'unknown6' value
     *
     * @param \Protobuf\Collection<\POGOProtos\Networking\Envelopes\Unknown6> $value
     */
    public function setUnknown6List(\Protobuf\Collection $value = null)
    {
        $this->unknown6 = $value;
    }

    /**
     * Add a new element to 'unknown6'
     *
     * @param \POGOProtos\Networking\Envelopes\Unknown6 $value
     */
    public function addUnknown6(\POGOProtos\Networking\Envelopes\Unknown6 $value)
    {
        if ($this->unknown6 === null) {
            $this->unknown6 = new \Protobuf\MessageCollection();
        }

        $this->unknown6->add($value);
    }

    /**
     * Check if 'latitude' has a value
     *
     * @return bool
     */
    public function hasLatitude()
    {
        return $this->latitude !== null;
    }

    /**
     * Get 'latitude' value
     *
     * @return float
     */
    public function getLatitude()
    {
        return $this->latitude;
    }

    /**
     * Set 'latitude' value
     *
     * @param float $value
     */
    public function setLatitude($value = null)
    {
        $this->latitude = $value;
    }

    /**
     * Check if 'longitude' has a value
     *
     * @return bool
     */
    public function hasLongitude()
    {
        return $this->longitude !== null;
    }

    /**
     * Get 'longitude' value
     *
     * @return float
     */
    public function getLongitude()
    {
        return $this->longitude;
    }

    /**
     * Set 'longitude' value
     *
     * @param float $value
     */
    public function setLongitude($value = null)
    {
        $this->longitude = $value;
    }

    /**
     * Check if 'altitude' has a value
     *
     * @return bool
     */
    public function hasAltitude()
    {
        return $this->altitude !== null;
    }

    /**
     * Get 'altitude' value
     *
     * @return float
     */
    public function getAltitude()
    {
        return $this->altitude;
    }

    /**
     * Set 'altitude' value
     *
     * @param float $value
     */
    public function setAltitude($value = null)
    {
        $this->altitude = $value;
    }

    /**
     * Check if 'auth_info' has a value
     *
     * @return bool
     */
    public function hasAuthInfo()
    {
        return $this->auth_info !== null;
    }

    /**
     * Get 'auth_info' value
     *
     * @return \POGOProtos\Networking\Envelopes\RequestEnvelope\AuthInfo
     */
    public function getAuthInfo()
    {
        return $this->auth_info;
    }

    /**
     * Set 'auth_info' value
     *
     * @param \POGOProtos\Networking\Envelopes\RequestEnvelope\AuthInfo $value
     */
    public function setAuthInfo(\POGOProtos\Networking\Envelopes\RequestEnvelope\AuthInfo $value = null)
    {
        $this->auth_info = $value;
    }

    /**
     * Check if 'auth_ticket' has a value
     *
     * @return bool
     */
    public function hasAuthTicket()
    {
        return $this->auth_ticket !== null;
    }

    /**
     * Get 'auth_ticket' value
     *
     * @return \POGOProtos\Networking\Envelopes\AuthTicket
     */
    public function getAuthTicket()
    {
        return $this->auth_ticket;
    }

    /**
     * Set 'auth_ticket' value
     *
     * @param \POGOProtos\Networking\Envelopes\AuthTicket $value
     */
    public function setAuthTicket(\POGOProtos\Networking\Envelopes\AuthTicket $value = null)
    {
        $this->auth_ticket = $value;
    }

    /**
     * Check if 'unknown12' has a value
     *
     * @return bool
     */
    public function hasUnknown12()
    {
        return $this->unknown12 !== null;
    }

    /**
     * Get 'unknown12' value
     *
     * @return int
     */
    public function getUnknown12()
    {
        return $this->unknown12;
    }

    /**
     * Set 'unknown12' value
     *
     * @param int $value
     */
    public function setUnknown12($value = null)
    {
        $this->unknown12 = $value;
    }

    /**
     * {@inheritdoc}
     */
    public function extensions()
    {
        if ( $this->extensions !== null) {
            return $this->extensions;
        }

        return $this->extensions = new \Protobuf\Extension\ExtensionFieldMap(__CLASS__);
    }

    /**
     * {@inheritdoc}
     */
    public function unknownFieldSet()
    {
        return $this->unknownFieldSet;
    }

    /**
     * {@inheritdoc}
     */
    public static function fromStream($stream, \Protobuf\Configuration $configuration = null)
    {
        return new self($stream, $configuration);
    }

    /**
     * {@inheritdoc}
     */
    public static function fromArray(array $values)
    {
        $message = new self();
        $values  = array_merge([
            'status_code' => null,
            'request_id' => null,
            'requests' => [],
            'unknown6' => [],
            'latitude' => null,
            'longitude' => null,
            'altitude' => null,
            'auth_info' => null,
            'auth_ticket' => null,
            'unknown12' => null
        ], $values);

        $message->setStatusCode($values['status_code']);
        $message->setRequestId($values['request_id']);
        $message->setLatitude($values['latitude']);
        $message->setLongitude($values['longitude']);
        $message->setAltitude($values['altitude']);
        $message->setAuthInfo($values['auth_info']);
        $message->setAuthTicket($values['auth_ticket']);
        $message->setUnknown12($values['unknown12']);

        foreach ($values['requests'] as $item) {
            $message->addRequests($item);
        }

        foreach ($values['unknown6'] as $item) {
            $message->addUnknown6($item);
        }

        return $message;
    }

    /**
     * {@inheritdoc}
     */
    public static function descriptor()
    {
        return \google\protobuf\DescriptorProto::fromArray([
            'name'      => 'RequestEnvelope',
            'field'     => [
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 1,
                    'name' => 'status_code',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 3,
                    'name' => 'request_id',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_UINT64(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 4,
                    'name' => 'requests',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_MESSAGE(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_REPEATED(),
                    'type_name' => '.POGOProtos.Networking.Requests.Request'
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 6,
                    'name' => 'unknown6',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_MESSAGE(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_REPEATED(),
                    'type_name' => '.POGOProtos.Networking.Envelopes.Unknown6'
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 7,
                    'name' => 'latitude',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_DOUBLE(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 8,
                    'name' => 'longitude',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_DOUBLE(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 9,
                    'name' => 'altitude',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_DOUBLE(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 10,
                    'name' => 'auth_info',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_MESSAGE(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL(),
                    'type_name' => '.POGOProtos.Networking.Envelopes.RequestEnvelope.AuthInfo'
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 11,
                    'name' => 'auth_ticket',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_MESSAGE(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL(),
                    'type_name' => '.POGOProtos.Networking.Envelopes.AuthTicket'
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 12,
                    'name' => 'unknown12',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT64(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
            ],
        ]);
    }

    /**
     * {@inheritdoc}
     */
    public function toStream(\Protobuf\Configuration $configuration = null)
    {
        $config  = $configuration ?: \Protobuf\Configuration::getInstance();
        $context = $config->createWriteContext();
        $stream  = $context->getStream();

        $this->writeTo($context);
        $stream->seek(0);

        return $stream;
    }

    /**
     * {@inheritdoc}
     */
    public function writeTo(\Protobuf\WriteContext $context)
    {
        $stream      = $context->getStream();
        $writer      = $context->getWriter();
        $sizeContext = $context->getComputeSizeContext();

        if ($this->status_code !== null) {
            $writer->writeVarint($stream, 8);
            $writer->writeVarint($stream, $this->status_code);
        }

        if ($this->request_id !== null) {
            $writer->writeVarint($stream, 24);
            $writer->writeVarint($stream, $this->request_id);
        }

        if ($this->requests !== null) {
            foreach ($this->requests as $val) {
                $writer->writeVarint($stream, 34);
                $writer->writeVarint($stream, $val->serializedSize($sizeContext));
                $val->writeTo($context);
            }
        }

        if ($this->unknown6 !== null) {
            foreach ($this->unknown6 as $val) {
                $writer->writeVarint($stream, 50);
                $writer->writeVarint($stream, $val->serializedSize($sizeContext));
                $val->writeTo($context);
            }
        }

        if ($this->latitude !== null) {
            $writer->writeVarint($stream, 57);
            $writer->writeDouble($stream, $this->latitude);
        }

        if ($this->longitude !== null) {
            $writer->writeVarint($stream, 65);
            $writer->writeDouble($stream, $this->longitude);
        }

        if ($this->altitude !== null) {
            $writer->writeVarint($stream, 73);
            $writer->writeDouble($stream, $this->altitude);
        }

        if ($this->auth_info !== null) {
            $writer->writeVarint($stream, 82);
            $writer->writeVarint($stream, $this->auth_info->serializedSize($sizeContext));
            $this->auth_info->writeTo($context);
        }

        if ($this->auth_ticket !== null) {
            $writer->writeVarint($stream, 90);
            $writer->writeVarint($stream, $this->auth_ticket->serializedSize($sizeContext));
            $this->auth_ticket->writeTo($context);
        }

        if ($this->unknown12 !== null) {
            $writer->writeVarint($stream, 96);
            $writer->writeVarint($stream, $this->unknown12);
        }

        if ($this->extensions !== null) {
            $this->extensions->writeTo($context);
        }

        return $stream;
    }

    /**
     * {@inheritdoc}
     */
    public function readFrom(\Protobuf\ReadContext $context)
    {
        $reader = $context->getReader();
        $length = $context->getLength();
        $stream = $context->getStream();

        $limit = ($length !== null)
            ? ($stream->tell() + $length)
            : null;

        while ($limit === null || $stream->tell() < $limit) {

            if ($stream->eof()) {
                break;
            }

            $key  = $reader->readVarint($stream);
            $wire = \Protobuf\WireFormat::getTagWireType($key);
            $tag  = \Protobuf\WireFormat::getTagFieldNumber($key);

            if ($stream->eof()) {
                break;
            }

            if ($tag === 1) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->status_code = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 3) {
                \Protobuf\WireFormat::assertWireType($wire, 4);

                $this->request_id = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 4) {
                \Protobuf\WireFormat::assertWireType($wire, 11);

                $innerSize    = $reader->readVarint($stream);
                $innerMessage = new \POGOProtos\Networking\Requests\Request();

                if ($this->requests === null) {
                    $this->requests = new \Protobuf\MessageCollection();
                }

                $this->requests->add($innerMessage);

                $context->setLength($innerSize);
                $innerMessage->readFrom($context);
                $context->setLength($length);

                continue;
            }

            if ($tag === 6) {
                \Protobuf\WireFormat::assertWireType($wire, 11);

                $innerSize    = $reader->readVarint($stream);
                $innerMessage = new \POGOProtos\Networking\Envelopes\Unknown6();

                if ($this->unknown6 === null) {
                    $this->unknown6 = new \Protobuf\MessageCollection();
                }

                $this->unknown6->add($innerMessage);

                $context->setLength($innerSize);
                $innerMessage->readFrom($context);
                $context->setLength($length);

                continue;
            }

            if ($tag === 7) {
                \Protobuf\WireFormat::assertWireType($wire, 1);

                $this->latitude = $reader->readDouble($stream);

                continue;
            }

            if ($tag === 8) {
                \Protobuf\WireFormat::assertWireType($wire, 1);

                $this->longitude = $reader->readDouble($stream);

                continue;
            }

            if ($tag === 9) {
                \Protobuf\WireFormat::assertWireType($wire, 1);

                $this->altitude = $reader->readDouble($stream);

                continue;
            }

            if ($tag === 10) {
                \Protobuf\WireFormat::assertWireType($wire, 11);

                $innerSize    = $reader->readVarint($stream);
                $innerMessage = new \POGOProtos\Networking\Envelopes\RequestEnvelope\AuthInfo();

                $this->auth_info = $innerMessage;

                $context->setLength($innerSize);
                $innerMessage->readFrom($context);
                $context->setLength($length);

                continue;
            }

            if ($tag === 11) {
                \Protobuf\WireFormat::assertWireType($wire, 11);

                $innerSize    = $reader->readVarint($stream);
                $innerMessage = new \POGOProtos\Networking\Envelopes\AuthTicket();

                $this->auth_ticket = $innerMessage;

                $context->setLength($innerSize);
                $innerMessage->readFrom($context);
                $context->setLength($length);

                continue;
            }

            if ($tag === 12) {
                \Protobuf\WireFormat::assertWireType($wire, 3);

                $this->unknown12 = $reader->readVarint($stream);

                continue;
            }

            $extensions = $context->getExtensionRegistry();
            $extension  = $extensions ? $extensions->findByNumber(__CLASS__, $tag) : null;

            if ($extension !== null) {
                $this->extensions()->add($extension, $extension->readFrom($context, $wire));

                continue;
            }

            if ($this->unknownFieldSet === null) {
                $this->unknownFieldSet = new \Protobuf\UnknownFieldSet();
            }

            $data    = $reader->readUnknown($stream, $wire);
            $unknown = new \Protobuf\Unknown($tag, $wire, $data);

            $this->unknownFieldSet->add($unknown);

        }
    }

    /**
     * {@inheritdoc}
     */
    public function serializedSize(\Protobuf\ComputeSizeContext $context)
    {
        $calculator = $context->getSizeCalculator();
        $size       = 0;

        if ($this->status_code !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->status_code);
        }

        if ($this->request_id !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->request_id);
        }

        if ($this->requests !== null) {
            foreach ($this->requests as $val) {
                $innerSize = $val->serializedSize($context);

                $size += 1;
                $size += $innerSize;
                $size += $calculator->computeVarintSize($innerSize);
            }
        }

        if ($this->unknown6 !== null) {
            foreach ($this->unknown6 as $val) {
                $innerSize = $val->serializedSize($context);

                $size += 1;
                $size += $innerSize;
                $size += $calculator->computeVarintSize($innerSize);
            }
        }

        if ($this->latitude !== null) {
            $size += 1;
            $size += 8;
        }

        if ($this->longitude !== null) {
            $size += 1;
            $size += 8;
        }

        if ($this->altitude !== null) {
            $size += 1;
            $size += 8;
        }

        if ($this->auth_info !== null) {
            $innerSize = $this->auth_info->serializedSize($context);

            $size += 1;
            $size += $innerSize;
            $size += $calculator->computeVarintSize($innerSize);
        }

        if ($this->auth_ticket !== null) {
            $innerSize = $this->auth_ticket->serializedSize($context);

            $size += 1;
            $size += $innerSize;
            $size += $calculator->computeVarintSize($innerSize);
        }

        if ($this->unknown12 !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->unknown12);
        }

        if ($this->extensions !== null) {
            $size += $this->extensions->serializedSize($context);
        }

        return $size;
    }

    /**
     * {@inheritdoc}
     */
    public function clear()
    {
        $this->status_code = null;
        $this->request_id = null;
        $this->requests = null;
        $this->unknown6 = null;
        $this->latitude = null;
        $this->longitude = null;
        $this->altitude = null;
        $this->auth_info = null;
        $this->auth_ticket = null;
        $this->unknown12 = null;
    }

    /**
     * {@inheritdoc}
     */
    public function merge(\Protobuf\Message $message)
    {
        if ( ! $message instanceof \POGOProtos\Networking\Envelopes\RequestEnvelope) {
            throw new \InvalidArgumentException(sprintf('Argument 1 passed to %s must be a %s, %s given', __METHOD__, __CLASS__, get_class($message)));
        }

        $this->status_code = ($message->status_code !== null) ? $message->status_code : $this->status_code;
        $this->request_id = ($message->request_id !== null) ? $message->request_id : $this->request_id;
        $this->requests = ($message->requests !== null) ? $message->requests : $this->requests;
        $this->unknown6 = ($message->unknown6 !== null) ? $message->unknown6 : $this->unknown6;
        $this->latitude = ($message->latitude !== null) ? $message->latitude : $this->latitude;
        $this->longitude = ($message->longitude !== null) ? $message->longitude : $this->longitude;
        $this->altitude = ($message->altitude !== null) ? $message->altitude : $this->altitude;
        $this->auth_info = ($message->auth_info !== null) ? $message->auth_info : $this->auth_info;
        $this->auth_ticket = ($message->auth_ticket !== null) ? $message->auth_ticket : $this->auth_ticket;
        $this->unknown12 = ($message->unknown12 !== null) ? $message->unknown12 : $this->unknown12;
    }


}

