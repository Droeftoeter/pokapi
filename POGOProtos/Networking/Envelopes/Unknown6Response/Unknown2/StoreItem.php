<?php
/**
 * Generated by Protobuf protoc plugin.
 *
 * File descriptor : POGOProtos.Networking.Envelopes.proto
 */


namespace POGOProtos\Networking\Envelopes\Unknown6Response\Unknown2;

/**
 * Protobuf message :
 * POGOProtos.Networking.Envelopes.Unknown6Response.Unknown2.StoreItem
 */
class StoreItem extends \Protobuf\AbstractMessage
{

    /**
     * @var \Protobuf\UnknownFieldSet
     */
    protected $unknownFieldSet = null;

    /**
     * @var \Protobuf\Extension\ExtensionFieldMap
     */
    protected $extensions = null;

    /**
     * item_id optional string = 1
     *
     * @var string
     */
    protected $item_id = null;

    /**
     * is_iap optional bool = 2
     *
     * @var bool
     */
    protected $is_iap = null;

    /**
     * currency_to_buy optional message = 3
     *
     * @var \POGOProtos\Data\Player\Currency
     */
    protected $currency_to_buy = null;

    /**
     * yields_currency optional message = 4
     *
     * @var \POGOProtos\Data\Player\Currency
     */
    protected $yields_currency = null;

    /**
     * yields_item optional message = 5
     *
     * @var \POGOProtos\Inventory\Item\ItemData
     */
    protected $yields_item = null;

    /**
     * tags repeated message = 6
     *
     * @var \Protobuf\Collection<\POGOProtos\Networking\Envelopes\Unknown6Response\Unknown2\StoreItem\Tag>
     */
    protected $tags = null;

    /**
     * unknown7 optional int32 = 7
     *
     * @var int
     */
    protected $unknown7 = null;

    /**
     * Check if 'item_id' has a value
     *
     * @return bool
     */
    public function hasItemId()
    {
        return $this->item_id !== null;
    }

    /**
     * Get 'item_id' value
     *
     * @return string
     */
    public function getItemId()
    {
        return $this->item_id;
    }

    /**
     * Set 'item_id' value
     *
     * @param string $value
     */
    public function setItemId($value = null)
    {
        $this->item_id = $value;
    }

    /**
     * Check if 'is_iap' has a value
     *
     * @return bool
     */
    public function hasIsIap()
    {
        return $this->is_iap !== null;
    }

    /**
     * Get 'is_iap' value
     *
     * @return bool
     */
    public function getIsIap()
    {
        return $this->is_iap;
    }

    /**
     * Set 'is_iap' value
     *
     * @param bool $value
     */
    public function setIsIap($value = null)
    {
        $this->is_iap = $value;
    }

    /**
     * Check if 'currency_to_buy' has a value
     *
     * @return bool
     */
    public function hasCurrencyToBuy()
    {
        return $this->currency_to_buy !== null;
    }

    /**
     * Get 'currency_to_buy' value
     *
     * @return \POGOProtos\Data\Player\Currency
     */
    public function getCurrencyToBuy()
    {
        return $this->currency_to_buy;
    }

    /**
     * Set 'currency_to_buy' value
     *
     * @param \POGOProtos\Data\Player\Currency $value
     */
    public function setCurrencyToBuy(\POGOProtos\Data\Player\Currency $value = null)
    {
        $this->currency_to_buy = $value;
    }

    /**
     * Check if 'yields_currency' has a value
     *
     * @return bool
     */
    public function hasYieldsCurrency()
    {
        return $this->yields_currency !== null;
    }

    /**
     * Get 'yields_currency' value
     *
     * @return \POGOProtos\Data\Player\Currency
     */
    public function getYieldsCurrency()
    {
        return $this->yields_currency;
    }

    /**
     * Set 'yields_currency' value
     *
     * @param \POGOProtos\Data\Player\Currency $value
     */
    public function setYieldsCurrency(\POGOProtos\Data\Player\Currency $value = null)
    {
        $this->yields_currency = $value;
    }

    /**
     * Check if 'yields_item' has a value
     *
     * @return bool
     */
    public function hasYieldsItem()
    {
        return $this->yields_item !== null;
    }

    /**
     * Get 'yields_item' value
     *
     * @return \POGOProtos\Inventory\Item\ItemData
     */
    public function getYieldsItem()
    {
        return $this->yields_item;
    }

    /**
     * Set 'yields_item' value
     *
     * @param \POGOProtos\Inventory\Item\ItemData $value
     */
    public function setYieldsItem(\POGOProtos\Inventory\Item\ItemData $value = null)
    {
        $this->yields_item = $value;
    }

    /**
     * Check if 'tags' has a value
     *
     * @return bool
     */
    public function hasTagsList()
    {
        return $this->tags !== null;
    }

    /**
     * Get 'tags' value
     *
     * @return \Protobuf\Collection<\POGOProtos\Networking\Envelopes\Unknown6Response\Unknown2\StoreItem\Tag>
     */
    public function getTagsList()
    {
        return $this->tags;
    }

    /**
     * Set 'tags' value
     *
     * @param \Protobuf\Collection<\POGOProtos\Networking\Envelopes\Unknown6Response\Unknown2\StoreItem\Tag> $value
     */
    public function setTagsList(\Protobuf\Collection $value = null)
    {
        $this->tags = $value;
    }

    /**
     * Add a new element to 'tags'
     *
     * @param \POGOProtos\Networking\Envelopes\Unknown6Response\Unknown2\StoreItem\Tag
     * $value
     */
    public function addTags(\POGOProtos\Networking\Envelopes\Unknown6Response\Unknown2\StoreItem\Tag $value)
    {
        if ($this->tags === null) {
            $this->tags = new \Protobuf\MessageCollection();
        }

        $this->tags->add($value);
    }

    /**
     * Check if 'unknown7' has a value
     *
     * @return bool
     */
    public function hasUnknown7()
    {
        return $this->unknown7 !== null;
    }

    /**
     * Get 'unknown7' value
     *
     * @return int
     */
    public function getUnknown7()
    {
        return $this->unknown7;
    }

    /**
     * Set 'unknown7' value
     *
     * @param int $value
     */
    public function setUnknown7($value = null)
    {
        $this->unknown7 = $value;
    }

    /**
     * {@inheritdoc}
     */
    public function extensions()
    {
        if ( $this->extensions !== null) {
            return $this->extensions;
        }

        return $this->extensions = new \Protobuf\Extension\ExtensionFieldMap(__CLASS__);
    }

    /**
     * {@inheritdoc}
     */
    public function unknownFieldSet()
    {
        return $this->unknownFieldSet;
    }

    /**
     * {@inheritdoc}
     */
    public static function fromStream($stream, \Protobuf\Configuration $configuration = null)
    {
        return new self($stream, $configuration);
    }

    /**
     * {@inheritdoc}
     */
    public static function fromArray(array $values)
    {
        $message = new self();
        $values  = array_merge([
            'item_id' => null,
            'is_iap' => null,
            'currency_to_buy' => null,
            'yields_currency' => null,
            'yields_item' => null,
            'tags' => [],
            'unknown7' => null
        ], $values);

        $message->setItemId($values['item_id']);
        $message->setIsIap($values['is_iap']);
        $message->setCurrencyToBuy($values['currency_to_buy']);
        $message->setYieldsCurrency($values['yields_currency']);
        $message->setYieldsItem($values['yields_item']);
        $message->setUnknown7($values['unknown7']);

        foreach ($values['tags'] as $item) {
            $message->addTags($item);
        }

        return $message;
    }

    /**
     * {@inheritdoc}
     */
    public static function descriptor()
    {
        return \google\protobuf\DescriptorProto::fromArray([
            'name'      => 'StoreItem',
            'field'     => [
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 1,
                    'name' => 'item_id',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_STRING(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 2,
                    'name' => 'is_iap',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_BOOL(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 3,
                    'name' => 'currency_to_buy',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_MESSAGE(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL(),
                    'type_name' => '.POGOProtos.Data.Player.Currency'
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 4,
                    'name' => 'yields_currency',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_MESSAGE(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL(),
                    'type_name' => '.POGOProtos.Data.Player.Currency'
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 5,
                    'name' => 'yields_item',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_MESSAGE(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL(),
                    'type_name' => '.POGOProtos.Inventory.Item.ItemData'
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 6,
                    'name' => 'tags',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_MESSAGE(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_REPEATED(),
                    'type_name' => '.POGOProtos.Networking.Envelopes.Unknown6Response.Unknown2.StoreItem.Tag'
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 7,
                    'name' => 'unknown7',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
            ],
        ]);
    }

    /**
     * {@inheritdoc}
     */
    public function toStream(\Protobuf\Configuration $configuration = null)
    {
        $config  = $configuration ?: \Protobuf\Configuration::getInstance();
        $context = $config->createWriteContext();
        $stream  = $context->getStream();

        $this->writeTo($context);
        $stream->seek(0);

        return $stream;
    }

    /**
     * {@inheritdoc}
     */
    public function writeTo(\Protobuf\WriteContext $context)
    {
        $stream      = $context->getStream();
        $writer      = $context->getWriter();
        $sizeContext = $context->getComputeSizeContext();

        if ($this->item_id !== null) {
            $writer->writeVarint($stream, 10);
            $writer->writeString($stream, $this->item_id);
        }

        if ($this->is_iap !== null) {
            $writer->writeVarint($stream, 16);
            $writer->writeBool($stream, $this->is_iap);
        }

        if ($this->currency_to_buy !== null) {
            $writer->writeVarint($stream, 26);
            $writer->writeVarint($stream, $this->currency_to_buy->serializedSize($sizeContext));
            $this->currency_to_buy->writeTo($context);
        }

        if ($this->yields_currency !== null) {
            $writer->writeVarint($stream, 34);
            $writer->writeVarint($stream, $this->yields_currency->serializedSize($sizeContext));
            $this->yields_currency->writeTo($context);
        }

        if ($this->yields_item !== null) {
            $writer->writeVarint($stream, 42);
            $writer->writeVarint($stream, $this->yields_item->serializedSize($sizeContext));
            $this->yields_item->writeTo($context);
        }

        if ($this->tags !== null) {
            foreach ($this->tags as $val) {
                $writer->writeVarint($stream, 50);
                $writer->writeVarint($stream, $val->serializedSize($sizeContext));
                $val->writeTo($context);
            }
        }

        if ($this->unknown7 !== null) {
            $writer->writeVarint($stream, 56);
            $writer->writeVarint($stream, $this->unknown7);
        }

        if ($this->extensions !== null) {
            $this->extensions->writeTo($context);
        }

        return $stream;
    }

    /**
     * {@inheritdoc}
     */
    public function readFrom(\Protobuf\ReadContext $context)
    {
        $reader = $context->getReader();
        $length = $context->getLength();
        $stream = $context->getStream();

        $limit = ($length !== null)
            ? ($stream->tell() + $length)
            : null;

        while ($limit === null || $stream->tell() < $limit) {

            if ($stream->eof()) {
                break;
            }

            $key  = $reader->readVarint($stream);
            $wire = \Protobuf\WireFormat::getTagWireType($key);
            $tag  = \Protobuf\WireFormat::getTagFieldNumber($key);

            if ($stream->eof()) {
                break;
            }

            if ($tag === 1) {
                \Protobuf\WireFormat::assertWireType($wire, 9);

                $this->item_id = $reader->readString($stream);

                continue;
            }

            if ($tag === 2) {
                \Protobuf\WireFormat::assertWireType($wire, 8);

                $this->is_iap = $reader->readBool($stream);

                continue;
            }

            if ($tag === 3) {
                \Protobuf\WireFormat::assertWireType($wire, 11);

                $innerSize    = $reader->readVarint($stream);
                $innerMessage = new \POGOProtos\Data\Player\Currency();

                $this->currency_to_buy = $innerMessage;

                $context->setLength($innerSize);
                $innerMessage->readFrom($context);
                $context->setLength($length);

                continue;
            }

            if ($tag === 4) {
                \Protobuf\WireFormat::assertWireType($wire, 11);

                $innerSize    = $reader->readVarint($stream);
                $innerMessage = new \POGOProtos\Data\Player\Currency();

                $this->yields_currency = $innerMessage;

                $context->setLength($innerSize);
                $innerMessage->readFrom($context);
                $context->setLength($length);

                continue;
            }

            if ($tag === 5) {
                \Protobuf\WireFormat::assertWireType($wire, 11);

                $innerSize    = $reader->readVarint($stream);
                $innerMessage = new \POGOProtos\Inventory\Item\ItemData();

                $this->yields_item = $innerMessage;

                $context->setLength($innerSize);
                $innerMessage->readFrom($context);
                $context->setLength($length);

                continue;
            }

            if ($tag === 6) {
                \Protobuf\WireFormat::assertWireType($wire, 11);

                $innerSize    = $reader->readVarint($stream);
                $innerMessage = new \POGOProtos\Networking\Envelopes\Unknown6Response\Unknown2\StoreItem\Tag();

                if ($this->tags === null) {
                    $this->tags = new \Protobuf\MessageCollection();
                }

                $this->tags->add($innerMessage);

                $context->setLength($innerSize);
                $innerMessage->readFrom($context);
                $context->setLength($length);

                continue;
            }

            if ($tag === 7) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->unknown7 = $reader->readVarint($stream);

                continue;
            }

            $extensions = $context->getExtensionRegistry();
            $extension  = $extensions ? $extensions->findByNumber(__CLASS__, $tag) : null;

            if ($extension !== null) {
                $this->extensions()->add($extension, $extension->readFrom($context, $wire));

                continue;
            }

            if ($this->unknownFieldSet === null) {
                $this->unknownFieldSet = new \Protobuf\UnknownFieldSet();
            }

            $data    = $reader->readUnknown($stream, $wire);
            $unknown = new \Protobuf\Unknown($tag, $wire, $data);

            $this->unknownFieldSet->add($unknown);

        }
    }

    /**
     * {@inheritdoc}
     */
    public function serializedSize(\Protobuf\ComputeSizeContext $context)
    {
        $calculator = $context->getSizeCalculator();
        $size       = 0;

        if ($this->item_id !== null) {
            $size += 1;
            $size += $calculator->computeStringSize($this->item_id);
        }

        if ($this->is_iap !== null) {
            $size += 1;
            $size += 1;
        }

        if ($this->currency_to_buy !== null) {
            $innerSize = $this->currency_to_buy->serializedSize($context);

            $size += 1;
            $size += $innerSize;
            $size += $calculator->computeVarintSize($innerSize);
        }

        if ($this->yields_currency !== null) {
            $innerSize = $this->yields_currency->serializedSize($context);

            $size += 1;
            $size += $innerSize;
            $size += $calculator->computeVarintSize($innerSize);
        }

        if ($this->yields_item !== null) {
            $innerSize = $this->yields_item->serializedSize($context);

            $size += 1;
            $size += $innerSize;
            $size += $calculator->computeVarintSize($innerSize);
        }

        if ($this->tags !== null) {
            foreach ($this->tags as $val) {
                $innerSize = $val->serializedSize($context);

                $size += 1;
                $size += $innerSize;
                $size += $calculator->computeVarintSize($innerSize);
            }
        }

        if ($this->unknown7 !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->unknown7);
        }

        if ($this->extensions !== null) {
            $size += $this->extensions->serializedSize($context);
        }

        return $size;
    }

    /**
     * {@inheritdoc}
     */
    public function clear()
    {
        $this->item_id = null;
        $this->is_iap = null;
        $this->currency_to_buy = null;
        $this->yields_currency = null;
        $this->yields_item = null;
        $this->tags = null;
        $this->unknown7 = null;
    }

    /**
     * {@inheritdoc}
     */
    public function merge(\Protobuf\Message $message)
    {
        if ( ! $message instanceof \POGOProtos\Networking\Envelopes\Unknown6Response\Unknown2\StoreItem) {
            throw new \InvalidArgumentException(sprintf('Argument 1 passed to %s must be a %s, %s given', __METHOD__, __CLASS__, get_class($message)));
        }

        $this->item_id = ($message->item_id !== null) ? $message->item_id : $this->item_id;
        $this->is_iap = ($message->is_iap !== null) ? $message->is_iap : $this->is_iap;
        $this->currency_to_buy = ($message->currency_to_buy !== null) ? $message->currency_to_buy : $this->currency_to_buy;
        $this->yields_currency = ($message->yields_currency !== null) ? $message->yields_currency : $this->yields_currency;
        $this->yields_item = ($message->yields_item !== null) ? $message->yields_item : $this->yields_item;
        $this->tags = ($message->tags !== null) ? $message->tags : $this->tags;
        $this->unknown7 = ($message->unknown7 !== null) ? $message->unknown7 : $this->unknown7;
    }


}

