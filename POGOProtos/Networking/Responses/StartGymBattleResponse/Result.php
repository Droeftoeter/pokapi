<?php
/**
 * Generated by Protobuf protoc plugin.
 *
 * File descriptor : POGOProtos.Networking.Responses.proto
 */


namespace POGOProtos\Networking\Responses\StartGymBattleResponse;

/**
 * Protobuf enum : POGOProtos.Networking.Responses.StartGymBattleResponse.Result
 */
class Result extends \Protobuf\Enum
{

    /**
     * UNSET = 0
     */
    const UNSET_VALUE = 0;

    /**
     * SUCCESS = 1
     */
    const SUCCESS_VALUE = 1;

    /**
     * ERROR_GYM_NOT_FOUND = 2
     */
    const ERROR_GYM_NOT_FOUND_VALUE = 2;

    /**
     * ERROR_GYM_NEUTRAL = 3
     */
    const ERROR_GYM_NEUTRAL_VALUE = 3;

    /**
     * ERROR_GYM_WRONG_TEAM = 4
     */
    const ERROR_GYM_WRONG_TEAM_VALUE = 4;

    /**
     * ERROR_GYM_EMPTY = 5
     */
    const ERROR_GYM_EMPTY_VALUE = 5;

    /**
     * ERROR_INVALID_DEFENDER = 6
     */
    const ERROR_INVALID_DEFENDER_VALUE = 6;

    /**
     * ERROR_TRAINING_INVALID_ATTACKER_COUNT = 7
     */
    const ERROR_TRAINING_INVALID_ATTACKER_COUNT_VALUE = 7;

    /**
     * ERROR_ALL_POKEMON_FAINTED = 8
     */
    const ERROR_ALL_POKEMON_FAINTED_VALUE = 8;

    /**
     * ERROR_TOO_MANY_BATTLES = 9
     */
    const ERROR_TOO_MANY_BATTLES_VALUE = 9;

    /**
     * ERROR_TOO_MANY_PLAYERS = 10
     */
    const ERROR_TOO_MANY_PLAYERS_VALUE = 10;

    /**
     * ERROR_GYM_BATTLE_LOCKOUT = 11
     */
    const ERROR_GYM_BATTLE_LOCKOUT_VALUE = 11;

    /**
     * ERROR_PLAYER_BELOW_MINIMUM_LEVEL = 12
     */
    const ERROR_PLAYER_BELOW_MINIMUM_LEVEL_VALUE = 12;

    /**
     * ERROR_NOT_IN_RANGE = 13
     */
    const ERROR_NOT_IN_RANGE_VALUE = 13;

    /**
     * @var \POGOProtos\Networking\Responses\StartGymBattleResponse\Result
     */
    protected static $UNSET = null;

    /**
     * @var \POGOProtos\Networking\Responses\StartGymBattleResponse\Result
     */
    protected static $SUCCESS = null;

    /**
     * @var \POGOProtos\Networking\Responses\StartGymBattleResponse\Result
     */
    protected static $ERROR_GYM_NOT_FOUND = null;

    /**
     * @var \POGOProtos\Networking\Responses\StartGymBattleResponse\Result
     */
    protected static $ERROR_GYM_NEUTRAL = null;

    /**
     * @var \POGOProtos\Networking\Responses\StartGymBattleResponse\Result
     */
    protected static $ERROR_GYM_WRONG_TEAM = null;

    /**
     * @var \POGOProtos\Networking\Responses\StartGymBattleResponse\Result
     */
    protected static $ERROR_GYM_EMPTY = null;

    /**
     * @var \POGOProtos\Networking\Responses\StartGymBattleResponse\Result
     */
    protected static $ERROR_INVALID_DEFENDER = null;

    /**
     * @var \POGOProtos\Networking\Responses\StartGymBattleResponse\Result
     */
    protected static $ERROR_TRAINING_INVALID_ATTACKER_COUNT = null;

    /**
     * @var \POGOProtos\Networking\Responses\StartGymBattleResponse\Result
     */
    protected static $ERROR_ALL_POKEMON_FAINTED = null;

    /**
     * @var \POGOProtos\Networking\Responses\StartGymBattleResponse\Result
     */
    protected static $ERROR_TOO_MANY_BATTLES = null;

    /**
     * @var \POGOProtos\Networking\Responses\StartGymBattleResponse\Result
     */
    protected static $ERROR_TOO_MANY_PLAYERS = null;

    /**
     * @var \POGOProtos\Networking\Responses\StartGymBattleResponse\Result
     */
    protected static $ERROR_GYM_BATTLE_LOCKOUT = null;

    /**
     * @var \POGOProtos\Networking\Responses\StartGymBattleResponse\Result
     */
    protected static $ERROR_PLAYER_BELOW_MINIMUM_LEVEL = null;

    /**
     * @var \POGOProtos\Networking\Responses\StartGymBattleResponse\Result
     */
    protected static $ERROR_NOT_IN_RANGE = null;

    /**
     * @return \POGOProtos\Networking\Responses\StartGymBattleResponse\Result
     */
    public static function UNSET()
    {
        if (self::$UNSET !== null) {
            return self::$UNSET;
        }

        return self::$UNSET = new self('UNSET', self::UNSET_VALUE);
    }

    /**
     * @return \POGOProtos\Networking\Responses\StartGymBattleResponse\Result
     */
    public static function SUCCESS()
    {
        if (self::$SUCCESS !== null) {
            return self::$SUCCESS;
        }

        return self::$SUCCESS = new self('SUCCESS', self::SUCCESS_VALUE);
    }

    /**
     * @return \POGOProtos\Networking\Responses\StartGymBattleResponse\Result
     */
    public static function ERROR_GYM_NOT_FOUND()
    {
        if (self::$ERROR_GYM_NOT_FOUND !== null) {
            return self::$ERROR_GYM_NOT_FOUND;
        }

        return self::$ERROR_GYM_NOT_FOUND = new self('ERROR_GYM_NOT_FOUND', self::ERROR_GYM_NOT_FOUND_VALUE);
    }

    /**
     * @return \POGOProtos\Networking\Responses\StartGymBattleResponse\Result
     */
    public static function ERROR_GYM_NEUTRAL()
    {
        if (self::$ERROR_GYM_NEUTRAL !== null) {
            return self::$ERROR_GYM_NEUTRAL;
        }

        return self::$ERROR_GYM_NEUTRAL = new self('ERROR_GYM_NEUTRAL', self::ERROR_GYM_NEUTRAL_VALUE);
    }

    /**
     * @return \POGOProtos\Networking\Responses\StartGymBattleResponse\Result
     */
    public static function ERROR_GYM_WRONG_TEAM()
    {
        if (self::$ERROR_GYM_WRONG_TEAM !== null) {
            return self::$ERROR_GYM_WRONG_TEAM;
        }

        return self::$ERROR_GYM_WRONG_TEAM = new self('ERROR_GYM_WRONG_TEAM', self::ERROR_GYM_WRONG_TEAM_VALUE);
    }

    /**
     * @return \POGOProtos\Networking\Responses\StartGymBattleResponse\Result
     */
    public static function ERROR_GYM_EMPTY()
    {
        if (self::$ERROR_GYM_EMPTY !== null) {
            return self::$ERROR_GYM_EMPTY;
        }

        return self::$ERROR_GYM_EMPTY = new self('ERROR_GYM_EMPTY', self::ERROR_GYM_EMPTY_VALUE);
    }

    /**
     * @return \POGOProtos\Networking\Responses\StartGymBattleResponse\Result
     */
    public static function ERROR_INVALID_DEFENDER()
    {
        if (self::$ERROR_INVALID_DEFENDER !== null) {
            return self::$ERROR_INVALID_DEFENDER;
        }

        return self::$ERROR_INVALID_DEFENDER = new self('ERROR_INVALID_DEFENDER', self::ERROR_INVALID_DEFENDER_VALUE);
    }

    /**
     * @return \POGOProtos\Networking\Responses\StartGymBattleResponse\Result
     */
    public static function ERROR_TRAINING_INVALID_ATTACKER_COUNT()
    {
        if (self::$ERROR_TRAINING_INVALID_ATTACKER_COUNT !== null) {
            return self::$ERROR_TRAINING_INVALID_ATTACKER_COUNT;
        }

        return self::$ERROR_TRAINING_INVALID_ATTACKER_COUNT = new self('ERROR_TRAINING_INVALID_ATTACKER_COUNT', self::ERROR_TRAINING_INVALID_ATTACKER_COUNT_VALUE);
    }

    /**
     * @return \POGOProtos\Networking\Responses\StartGymBattleResponse\Result
     */
    public static function ERROR_ALL_POKEMON_FAINTED()
    {
        if (self::$ERROR_ALL_POKEMON_FAINTED !== null) {
            return self::$ERROR_ALL_POKEMON_FAINTED;
        }

        return self::$ERROR_ALL_POKEMON_FAINTED = new self('ERROR_ALL_POKEMON_FAINTED', self::ERROR_ALL_POKEMON_FAINTED_VALUE);
    }

    /**
     * @return \POGOProtos\Networking\Responses\StartGymBattleResponse\Result
     */
    public static function ERROR_TOO_MANY_BATTLES()
    {
        if (self::$ERROR_TOO_MANY_BATTLES !== null) {
            return self::$ERROR_TOO_MANY_BATTLES;
        }

        return self::$ERROR_TOO_MANY_BATTLES = new self('ERROR_TOO_MANY_BATTLES', self::ERROR_TOO_MANY_BATTLES_VALUE);
    }

    /**
     * @return \POGOProtos\Networking\Responses\StartGymBattleResponse\Result
     */
    public static function ERROR_TOO_MANY_PLAYERS()
    {
        if (self::$ERROR_TOO_MANY_PLAYERS !== null) {
            return self::$ERROR_TOO_MANY_PLAYERS;
        }

        return self::$ERROR_TOO_MANY_PLAYERS = new self('ERROR_TOO_MANY_PLAYERS', self::ERROR_TOO_MANY_PLAYERS_VALUE);
    }

    /**
     * @return \POGOProtos\Networking\Responses\StartGymBattleResponse\Result
     */
    public static function ERROR_GYM_BATTLE_LOCKOUT()
    {
        if (self::$ERROR_GYM_BATTLE_LOCKOUT !== null) {
            return self::$ERROR_GYM_BATTLE_LOCKOUT;
        }

        return self::$ERROR_GYM_BATTLE_LOCKOUT = new self('ERROR_GYM_BATTLE_LOCKOUT', self::ERROR_GYM_BATTLE_LOCKOUT_VALUE);
    }

    /**
     * @return \POGOProtos\Networking\Responses\StartGymBattleResponse\Result
     */
    public static function ERROR_PLAYER_BELOW_MINIMUM_LEVEL()
    {
        if (self::$ERROR_PLAYER_BELOW_MINIMUM_LEVEL !== null) {
            return self::$ERROR_PLAYER_BELOW_MINIMUM_LEVEL;
        }

        return self::$ERROR_PLAYER_BELOW_MINIMUM_LEVEL = new self('ERROR_PLAYER_BELOW_MINIMUM_LEVEL', self::ERROR_PLAYER_BELOW_MINIMUM_LEVEL_VALUE);
    }

    /**
     * @return \POGOProtos\Networking\Responses\StartGymBattleResponse\Result
     */
    public static function ERROR_NOT_IN_RANGE()
    {
        if (self::$ERROR_NOT_IN_RANGE !== null) {
            return self::$ERROR_NOT_IN_RANGE;
        }

        return self::$ERROR_NOT_IN_RANGE = new self('ERROR_NOT_IN_RANGE', self::ERROR_NOT_IN_RANGE_VALUE);
    }

    /**
     * @param int $value
     * @return \POGOProtos\Networking\Responses\StartGymBattleResponse\Result
     */
    public static function valueOf($value)
    {
        switch ($value) {
            case 0: return self::UNSET();
            case 1: return self::SUCCESS();
            case 2: return self::ERROR_GYM_NOT_FOUND();
            case 3: return self::ERROR_GYM_NEUTRAL();
            case 4: return self::ERROR_GYM_WRONG_TEAM();
            case 5: return self::ERROR_GYM_EMPTY();
            case 6: return self::ERROR_INVALID_DEFENDER();
            case 7: return self::ERROR_TRAINING_INVALID_ATTACKER_COUNT();
            case 8: return self::ERROR_ALL_POKEMON_FAINTED();
            case 9: return self::ERROR_TOO_MANY_BATTLES();
            case 10: return self::ERROR_TOO_MANY_PLAYERS();
            case 11: return self::ERROR_GYM_BATTLE_LOCKOUT();
            case 12: return self::ERROR_PLAYER_BELOW_MINIMUM_LEVEL();
            case 13: return self::ERROR_NOT_IN_RANGE();
            default: return null;
        }
    }


}

