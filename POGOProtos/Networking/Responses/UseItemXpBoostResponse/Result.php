<?php
/**
 * Generated by Protobuf protoc plugin.
 *
 * File descriptor : POGOProtos.Networking.Responses.proto
 */


namespace POGOProtos\Networking\Responses\UseItemXpBoostResponse;

/**
 * Protobuf enum : POGOProtos.Networking.Responses.UseItemXpBoostResponse.Result
 */
class Result extends \Protobuf\Enum
{

    /**
     * UNSET = 0
     */
    const UNSET_VALUE = 0;

    /**
     * SUCCESS = 1
     */
    const SUCCESS_VALUE = 1;

    /**
     * ERROR_INVALID_ITEM_TYPE = 2
     */
    const ERROR_INVALID_ITEM_TYPE_VALUE = 2;

    /**
     * ERROR_XP_BOOST_ALREADY_ACTIVE = 3
     */
    const ERROR_XP_BOOST_ALREADY_ACTIVE_VALUE = 3;

    /**
     * ERROR_NO_ITEMS_REMAINING = 4
     */
    const ERROR_NO_ITEMS_REMAINING_VALUE = 4;

    /**
     * ERROR_LOCATION_UNSET = 5
     */
    const ERROR_LOCATION_UNSET_VALUE = 5;

    /**
     * @var \POGOProtos\Networking\Responses\UseItemXpBoostResponse\Result
     */
    protected static $UNSET = null;

    /**
     * @var \POGOProtos\Networking\Responses\UseItemXpBoostResponse\Result
     */
    protected static $SUCCESS = null;

    /**
     * @var \POGOProtos\Networking\Responses\UseItemXpBoostResponse\Result
     */
    protected static $ERROR_INVALID_ITEM_TYPE = null;

    /**
     * @var \POGOProtos\Networking\Responses\UseItemXpBoostResponse\Result
     */
    protected static $ERROR_XP_BOOST_ALREADY_ACTIVE = null;

    /**
     * @var \POGOProtos\Networking\Responses\UseItemXpBoostResponse\Result
     */
    protected static $ERROR_NO_ITEMS_REMAINING = null;

    /**
     * @var \POGOProtos\Networking\Responses\UseItemXpBoostResponse\Result
     */
    protected static $ERROR_LOCATION_UNSET = null;

    /**
     * @return \POGOProtos\Networking\Responses\UseItemXpBoostResponse\Result
     */
    public static function UNSET()
    {
        if (self::$UNSET !== null) {
            return self::$UNSET;
        }

        return self::$UNSET = new self('UNSET', self::UNSET_VALUE);
    }

    /**
     * @return \POGOProtos\Networking\Responses\UseItemXpBoostResponse\Result
     */
    public static function SUCCESS()
    {
        if (self::$SUCCESS !== null) {
            return self::$SUCCESS;
        }

        return self::$SUCCESS = new self('SUCCESS', self::SUCCESS_VALUE);
    }

    /**
     * @return \POGOProtos\Networking\Responses\UseItemXpBoostResponse\Result
     */
    public static function ERROR_INVALID_ITEM_TYPE()
    {
        if (self::$ERROR_INVALID_ITEM_TYPE !== null) {
            return self::$ERROR_INVALID_ITEM_TYPE;
        }

        return self::$ERROR_INVALID_ITEM_TYPE = new self('ERROR_INVALID_ITEM_TYPE', self::ERROR_INVALID_ITEM_TYPE_VALUE);
    }

    /**
     * @return \POGOProtos\Networking\Responses\UseItemXpBoostResponse\Result
     */
    public static function ERROR_XP_BOOST_ALREADY_ACTIVE()
    {
        if (self::$ERROR_XP_BOOST_ALREADY_ACTIVE !== null) {
            return self::$ERROR_XP_BOOST_ALREADY_ACTIVE;
        }

        return self::$ERROR_XP_BOOST_ALREADY_ACTIVE = new self('ERROR_XP_BOOST_ALREADY_ACTIVE', self::ERROR_XP_BOOST_ALREADY_ACTIVE_VALUE);
    }

    /**
     * @return \POGOProtos\Networking\Responses\UseItemXpBoostResponse\Result
     */
    public static function ERROR_NO_ITEMS_REMAINING()
    {
        if (self::$ERROR_NO_ITEMS_REMAINING !== null) {
            return self::$ERROR_NO_ITEMS_REMAINING;
        }

        return self::$ERROR_NO_ITEMS_REMAINING = new self('ERROR_NO_ITEMS_REMAINING', self::ERROR_NO_ITEMS_REMAINING_VALUE);
    }

    /**
     * @return \POGOProtos\Networking\Responses\UseItemXpBoostResponse\Result
     */
    public static function ERROR_LOCATION_UNSET()
    {
        if (self::$ERROR_LOCATION_UNSET !== null) {
            return self::$ERROR_LOCATION_UNSET;
        }

        return self::$ERROR_LOCATION_UNSET = new self('ERROR_LOCATION_UNSET', self::ERROR_LOCATION_UNSET_VALUE);
    }

    /**
     * @param int $value
     * @return \POGOProtos\Networking\Responses\UseItemXpBoostResponse\Result
     */
    public static function valueOf($value)
    {
        switch ($value) {
            case 0: return self::UNSET();
            case 1: return self::SUCCESS();
            case 2: return self::ERROR_INVALID_ITEM_TYPE();
            case 3: return self::ERROR_XP_BOOST_ALREADY_ACTIVE();
            case 4: return self::ERROR_NO_ITEMS_REMAINING();
            case 5: return self::ERROR_LOCATION_UNSET();
            default: return null;
        }
    }


}

