<?php
/**
 * Generated by Protobuf protoc plugin.
 *
 * File descriptor : POGOProtos.Settings.proto
 */


namespace POGOProtos\Settings;

/**
 * Protobuf message : POGOProtos.Settings.FortSettings
 */
class FortSettings extends \Protobuf\AbstractMessage
{

    /**
     * @var \Protobuf\UnknownFieldSet
     */
    protected $unknownFieldSet = null;

    /**
     * @var \Protobuf\Extension\ExtensionFieldMap
     */
    protected $extensions = null;

    /**
     * interaction_range_meters optional double = 1
     *
     * @var float
     */
    protected $interaction_range_meters = null;

    /**
     * max_total_deployed_pokemon optional int32 = 2
     *
     * @var int
     */
    protected $max_total_deployed_pokemon = null;

    /**
     * max_player_deployed_pokemon optional int32 = 3
     *
     * @var int
     */
    protected $max_player_deployed_pokemon = null;

    /**
     * deploy_stamina_multiplier optional double = 4
     *
     * @var float
     */
    protected $deploy_stamina_multiplier = null;

    /**
     * deploy_attack_multiplier optional double = 5
     *
     * @var float
     */
    protected $deploy_attack_multiplier = null;

    /**
     * far_interaction_range_meters optional double = 6
     *
     * @var float
     */
    protected $far_interaction_range_meters = null;

    /**
     * Check if 'interaction_range_meters' has a value
     *
     * @return bool
     */
    public function hasInteractionRangeMeters()
    {
        return $this->interaction_range_meters !== null;
    }

    /**
     * Get 'interaction_range_meters' value
     *
     * @return float
     */
    public function getInteractionRangeMeters()
    {
        return $this->interaction_range_meters;
    }

    /**
     * Set 'interaction_range_meters' value
     *
     * @param float $value
     */
    public function setInteractionRangeMeters($value = null)
    {
        $this->interaction_range_meters = $value;
    }

    /**
     * Check if 'max_total_deployed_pokemon' has a value
     *
     * @return bool
     */
    public function hasMaxTotalDeployedPokemon()
    {
        return $this->max_total_deployed_pokemon !== null;
    }

    /**
     * Get 'max_total_deployed_pokemon' value
     *
     * @return int
     */
    public function getMaxTotalDeployedPokemon()
    {
        return $this->max_total_deployed_pokemon;
    }

    /**
     * Set 'max_total_deployed_pokemon' value
     *
     * @param int $value
     */
    public function setMaxTotalDeployedPokemon($value = null)
    {
        $this->max_total_deployed_pokemon = $value;
    }

    /**
     * Check if 'max_player_deployed_pokemon' has a value
     *
     * @return bool
     */
    public function hasMaxPlayerDeployedPokemon()
    {
        return $this->max_player_deployed_pokemon !== null;
    }

    /**
     * Get 'max_player_deployed_pokemon' value
     *
     * @return int
     */
    public function getMaxPlayerDeployedPokemon()
    {
        return $this->max_player_deployed_pokemon;
    }

    /**
     * Set 'max_player_deployed_pokemon' value
     *
     * @param int $value
     */
    public function setMaxPlayerDeployedPokemon($value = null)
    {
        $this->max_player_deployed_pokemon = $value;
    }

    /**
     * Check if 'deploy_stamina_multiplier' has a value
     *
     * @return bool
     */
    public function hasDeployStaminaMultiplier()
    {
        return $this->deploy_stamina_multiplier !== null;
    }

    /**
     * Get 'deploy_stamina_multiplier' value
     *
     * @return float
     */
    public function getDeployStaminaMultiplier()
    {
        return $this->deploy_stamina_multiplier;
    }

    /**
     * Set 'deploy_stamina_multiplier' value
     *
     * @param float $value
     */
    public function setDeployStaminaMultiplier($value = null)
    {
        $this->deploy_stamina_multiplier = $value;
    }

    /**
     * Check if 'deploy_attack_multiplier' has a value
     *
     * @return bool
     */
    public function hasDeployAttackMultiplier()
    {
        return $this->deploy_attack_multiplier !== null;
    }

    /**
     * Get 'deploy_attack_multiplier' value
     *
     * @return float
     */
    public function getDeployAttackMultiplier()
    {
        return $this->deploy_attack_multiplier;
    }

    /**
     * Set 'deploy_attack_multiplier' value
     *
     * @param float $value
     */
    public function setDeployAttackMultiplier($value = null)
    {
        $this->deploy_attack_multiplier = $value;
    }

    /**
     * Check if 'far_interaction_range_meters' has a value
     *
     * @return bool
     */
    public function hasFarInteractionRangeMeters()
    {
        return $this->far_interaction_range_meters !== null;
    }

    /**
     * Get 'far_interaction_range_meters' value
     *
     * @return float
     */
    public function getFarInteractionRangeMeters()
    {
        return $this->far_interaction_range_meters;
    }

    /**
     * Set 'far_interaction_range_meters' value
     *
     * @param float $value
     */
    public function setFarInteractionRangeMeters($value = null)
    {
        $this->far_interaction_range_meters = $value;
    }

    /**
     * {@inheritdoc}
     */
    public function extensions()
    {
        if ( $this->extensions !== null) {
            return $this->extensions;
        }

        return $this->extensions = new \Protobuf\Extension\ExtensionFieldMap(__CLASS__);
    }

    /**
     * {@inheritdoc}
     */
    public function unknownFieldSet()
    {
        return $this->unknownFieldSet;
    }

    /**
     * {@inheritdoc}
     */
    public static function fromStream($stream, \Protobuf\Configuration $configuration = null)
    {
        return new self($stream, $configuration);
    }

    /**
     * {@inheritdoc}
     */
    public static function fromArray(array $values)
    {
        $message = new self();
        $values  = array_merge([
            'interaction_range_meters' => null,
            'max_total_deployed_pokemon' => null,
            'max_player_deployed_pokemon' => null,
            'deploy_stamina_multiplier' => null,
            'deploy_attack_multiplier' => null,
            'far_interaction_range_meters' => null
        ], $values);

        $message->setInteractionRangeMeters($values['interaction_range_meters']);
        $message->setMaxTotalDeployedPokemon($values['max_total_deployed_pokemon']);
        $message->setMaxPlayerDeployedPokemon($values['max_player_deployed_pokemon']);
        $message->setDeployStaminaMultiplier($values['deploy_stamina_multiplier']);
        $message->setDeployAttackMultiplier($values['deploy_attack_multiplier']);
        $message->setFarInteractionRangeMeters($values['far_interaction_range_meters']);

        return $message;
    }

    /**
     * {@inheritdoc}
     */
    public static function descriptor()
    {
        return \google\protobuf\DescriptorProto::fromArray([
            'name'      => 'FortSettings',
            'field'     => [
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 1,
                    'name' => 'interaction_range_meters',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_DOUBLE(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 2,
                    'name' => 'max_total_deployed_pokemon',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 3,
                    'name' => 'max_player_deployed_pokemon',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_INT32(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 4,
                    'name' => 'deploy_stamina_multiplier',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_DOUBLE(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 5,
                    'name' => 'deploy_attack_multiplier',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_DOUBLE(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
                \google\protobuf\FieldDescriptorProto::fromArray([
                    'number' => 6,
                    'name' => 'far_interaction_range_meters',
                    'type' => \google\protobuf\FieldDescriptorProto\Type::TYPE_DOUBLE(),
                    'label' => \google\protobuf\FieldDescriptorProto\Label::LABEL_OPTIONAL()
                ]),
            ],
        ]);
    }

    /**
     * {@inheritdoc}
     */
    public function toStream(\Protobuf\Configuration $configuration = null)
    {
        $config  = $configuration ?: \Protobuf\Configuration::getInstance();
        $context = $config->createWriteContext();
        $stream  = $context->getStream();

        $this->writeTo($context);
        $stream->seek(0);

        return $stream;
    }

    /**
     * {@inheritdoc}
     */
    public function writeTo(\Protobuf\WriteContext $context)
    {
        $stream      = $context->getStream();
        $writer      = $context->getWriter();
        $sizeContext = $context->getComputeSizeContext();

        if ($this->interaction_range_meters !== null) {
            $writer->writeVarint($stream, 9);
            $writer->writeDouble($stream, $this->interaction_range_meters);
        }

        if ($this->max_total_deployed_pokemon !== null) {
            $writer->writeVarint($stream, 16);
            $writer->writeVarint($stream, $this->max_total_deployed_pokemon);
        }

        if ($this->max_player_deployed_pokemon !== null) {
            $writer->writeVarint($stream, 24);
            $writer->writeVarint($stream, $this->max_player_deployed_pokemon);
        }

        if ($this->deploy_stamina_multiplier !== null) {
            $writer->writeVarint($stream, 33);
            $writer->writeDouble($stream, $this->deploy_stamina_multiplier);
        }

        if ($this->deploy_attack_multiplier !== null) {
            $writer->writeVarint($stream, 41);
            $writer->writeDouble($stream, $this->deploy_attack_multiplier);
        }

        if ($this->far_interaction_range_meters !== null) {
            $writer->writeVarint($stream, 49);
            $writer->writeDouble($stream, $this->far_interaction_range_meters);
        }

        if ($this->extensions !== null) {
            $this->extensions->writeTo($context);
        }

        return $stream;
    }

    /**
     * {@inheritdoc}
     */
    public function readFrom(\Protobuf\ReadContext $context)
    {
        $reader = $context->getReader();
        $length = $context->getLength();
        $stream = $context->getStream();

        $limit = ($length !== null)
            ? ($stream->tell() + $length)
            : null;

        while ($limit === null || $stream->tell() < $limit) {

            if ($stream->eof()) {
                break;
            }

            $key  = $reader->readVarint($stream);
            $wire = \Protobuf\WireFormat::getTagWireType($key);
            $tag  = \Protobuf\WireFormat::getTagFieldNumber($key);

            if ($stream->eof()) {
                break;
            }

            if ($tag === 1) {
                \Protobuf\WireFormat::assertWireType($wire, 1);

                $this->interaction_range_meters = $reader->readDouble($stream);

                continue;
            }

            if ($tag === 2) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->max_total_deployed_pokemon = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 3) {
                \Protobuf\WireFormat::assertWireType($wire, 5);

                $this->max_player_deployed_pokemon = $reader->readVarint($stream);

                continue;
            }

            if ($tag === 4) {
                \Protobuf\WireFormat::assertWireType($wire, 1);

                $this->deploy_stamina_multiplier = $reader->readDouble($stream);

                continue;
            }

            if ($tag === 5) {
                \Protobuf\WireFormat::assertWireType($wire, 1);

                $this->deploy_attack_multiplier = $reader->readDouble($stream);

                continue;
            }

            if ($tag === 6) {
                \Protobuf\WireFormat::assertWireType($wire, 1);

                $this->far_interaction_range_meters = $reader->readDouble($stream);

                continue;
            }

            $extensions = $context->getExtensionRegistry();
            $extension  = $extensions ? $extensions->findByNumber(__CLASS__, $tag) : null;

            if ($extension !== null) {
                $this->extensions()->add($extension, $extension->readFrom($context, $wire));

                continue;
            }

            if ($this->unknownFieldSet === null) {
                $this->unknownFieldSet = new \Protobuf\UnknownFieldSet();
            }

            $data    = $reader->readUnknown($stream, $wire);
            $unknown = new \Protobuf\Unknown($tag, $wire, $data);

            $this->unknownFieldSet->add($unknown);

        }
    }

    /**
     * {@inheritdoc}
     */
    public function serializedSize(\Protobuf\ComputeSizeContext $context)
    {
        $calculator = $context->getSizeCalculator();
        $size       = 0;

        if ($this->interaction_range_meters !== null) {
            $size += 1;
            $size += 8;
        }

        if ($this->max_total_deployed_pokemon !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->max_total_deployed_pokemon);
        }

        if ($this->max_player_deployed_pokemon !== null) {
            $size += 1;
            $size += $calculator->computeVarintSize($this->max_player_deployed_pokemon);
        }

        if ($this->deploy_stamina_multiplier !== null) {
            $size += 1;
            $size += 8;
        }

        if ($this->deploy_attack_multiplier !== null) {
            $size += 1;
            $size += 8;
        }

        if ($this->far_interaction_range_meters !== null) {
            $size += 1;
            $size += 8;
        }

        if ($this->extensions !== null) {
            $size += $this->extensions->serializedSize($context);
        }

        return $size;
    }

    /**
     * {@inheritdoc}
     */
    public function clear()
    {
        $this->interaction_range_meters = null;
        $this->max_total_deployed_pokemon = null;
        $this->max_player_deployed_pokemon = null;
        $this->deploy_stamina_multiplier = null;
        $this->deploy_attack_multiplier = null;
        $this->far_interaction_range_meters = null;
    }

    /**
     * {@inheritdoc}
     */
    public function merge(\Protobuf\Message $message)
    {
        if ( ! $message instanceof \POGOProtos\Settings\FortSettings) {
            throw new \InvalidArgumentException(sprintf('Argument 1 passed to %s must be a %s, %s given', __METHOD__, __CLASS__, get_class($message)));
        }

        $this->interaction_range_meters = ($message->interaction_range_meters !== null) ? $message->interaction_range_meters : $this->interaction_range_meters;
        $this->max_total_deployed_pokemon = ($message->max_total_deployed_pokemon !== null) ? $message->max_total_deployed_pokemon : $this->max_total_deployed_pokemon;
        $this->max_player_deployed_pokemon = ($message->max_player_deployed_pokemon !== null) ? $message->max_player_deployed_pokemon : $this->max_player_deployed_pokemon;
        $this->deploy_stamina_multiplier = ($message->deploy_stamina_multiplier !== null) ? $message->deploy_stamina_multiplier : $this->deploy_stamina_multiplier;
        $this->deploy_attack_multiplier = ($message->deploy_attack_multiplier !== null) ? $message->deploy_attack_multiplier : $this->deploy_attack_multiplier;
        $this->far_interaction_range_meters = ($message->far_interaction_range_meters !== null) ? $message->far_interaction_range_meters : $this->far_interaction_range_meters;
    }


}

