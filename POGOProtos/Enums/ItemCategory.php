<?php
// Generated by https://github.com/bramp/protoc-gen-php// Please include protocolbuffers before this file, for example:
//   require('protocolbuffers.inc.php');
//   require('POGOProtos/Enums/ItemCategory.php');

namespace POGOProtos\Enums {

  use ProtobufEnum;

  // enum POGOProtos.Enums.ItemCategory
  abstract class ItemCategory extends ProtobufEnum {
    const ITEM_CATEGORY_NONE = 0;
    const ITEM_CATEGORY_POKEBALL = 1;
    const ITEM_CATEGORY_FOOD = 2;
    const ITEM_CATEGORY_MEDICINE = 3;
    const ITEM_CATEGORY_BOOST = 4;
    const ITEM_CATEGORY_UTILITES = 5;
    const ITEM_CATEGORY_CAMERA = 6;
    const ITEM_CATEGORY_DISK = 7;
    const ITEM_CATEGORY_INCUBATOR = 8;
    const ITEM_CATEGORY_INCENSE = 9;
    const ITEM_CATEGORY_XP_BOOST = 10;
    const ITEM_CATEGORY_INVENTORY_UPGRADE = 11;

    public static $_values = array(
      0 => "ITEM_CATEGORY_NONE",
      1 => "ITEM_CATEGORY_POKEBALL",
      2 => "ITEM_CATEGORY_FOOD",
      3 => "ITEM_CATEGORY_MEDICINE",
      4 => "ITEM_CATEGORY_BOOST",
      5 => "ITEM_CATEGORY_UTILITES",
      6 => "ITEM_CATEGORY_CAMERA",
      7 => "ITEM_CATEGORY_DISK",
      8 => "ITEM_CATEGORY_INCUBATOR",
      9 => "ITEM_CATEGORY_INCENSE",
      10 => "ITEM_CATEGORY_XP_BOOST",
      11 => "ITEM_CATEGORY_INVENTORY_UPGRADE",
    );

    public static function isValid($value) {
      return array_key_exists($value, self::$_values);
    }

    public static function toString($value) {
      checkArgument(is_int($value), 'value must be a integer');
      if (array_key_exists($value, self::$_values))
        return self::$_values[$value];
      return 'UNKNOWN';
    }
  }

}